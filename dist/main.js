/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ addLeadingZeros)\n/* harmony export */ });\nfunction addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ requiredArgs)\n/* harmony export */ });\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/_lib/requiredArgs/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/formatISO/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/formatISO/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ formatISO)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../_lib/addLeadingZeros/index.js */ \"./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n\n/**\n * @name formatISO\n * @category Common Helpers\n * @summary Format the date according to the ISO 8601 standard (https://support.sas.com/documentation/cdl/en/lrdict/64316/HTML/default/viewer.htm#a003169814.htm).\n *\n * @description\n * Return the formatted date string in ISO 8601 format. Options may be passed to control the parts and notations of the date.\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {'extended'|'basic'} [options.format='extended'] - if 'basic', hide delimiters between date and time values.\n * @param {'complete'|'date'|'time'} [options.representation='complete'] - format date, time with local time zone, or both.\n * @returns {String} the formatted date string (in local time zone)\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.format` must be 'extended' or 'basic'\n * @throws {RangeError} `options.represenation` must be 'date', 'time' or 'complete'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52))\n * //=> '2019-09-18T19:00:52Z'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601, short format (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { format: 'basic' })\n * //=> '20190918T190052'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, date only:\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'date' })\n * //=> '2019-09-18'\n *\n * @example\n * // Represent 18 September 2019 in ISO 8601 format, time only (local time zone is UTC):\n * const result = formatISO(new Date(2019, 8, 18, 19, 0, 52), { representation: 'time' })\n * //=> '19:00:52Z'\n */\n\nfunction formatISO(date, options) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var originalDate = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(date);\n\n  if (isNaN(originalDate.getTime())) {\n    throw new RangeError('Invalid time value');\n  }\n\n  var format = !(options !== null && options !== void 0 && options.format) ? 'extended' : String(options.format);\n  var representation = !(options !== null && options !== void 0 && options.representation) ? 'complete' : String(options.representation);\n\n  if (format !== 'extended' && format !== 'basic') {\n    throw new RangeError(\"format must be 'extended' or 'basic'\");\n  }\n\n  if (representation !== 'date' && representation !== 'time' && representation !== 'complete') {\n    throw new RangeError(\"representation must be 'date', 'time', or 'complete'\");\n  }\n\n  var result = '';\n  var tzOffset = '';\n  var dateDelimiter = format === 'extended' ? '-' : '';\n  var timeDelimiter = format === 'extended' ? ':' : ''; // Representation is either 'date' or 'complete'\n\n  if (representation !== 'time') {\n    var day = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(originalDate.getDate(), 2);\n    var month = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(originalDate.getMonth() + 1, 2);\n    var year = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(originalDate.getFullYear(), 4); // yyyyMMdd or yyyy-MM-dd.\n\n    result = \"\".concat(year).concat(dateDelimiter).concat(month).concat(dateDelimiter).concat(day);\n  } // Representation is either 'time' or 'complete'\n\n\n  if (representation !== 'date') {\n    // Add the timezone.\n    var offset = originalDate.getTimezoneOffset();\n\n    if (offset !== 0) {\n      var absoluteOffset = Math.abs(offset);\n      var hourOffset = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(Math.floor(absoluteOffset / 60), 2);\n      var minuteOffset = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(absoluteOffset % 60, 2); // If less than 0, the sign is +, because it is ahead of time.\n\n      var sign = offset < 0 ? '+' : '-';\n      tzOffset = \"\".concat(sign).concat(hourOffset, \":\").concat(minuteOffset);\n    } else {\n      tzOffset = 'Z';\n    }\n\n    var hour = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(originalDate.getHours(), 2);\n    var minute = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(originalDate.getMinutes(), 2);\n    var second = (0,_lib_addLeadingZeros_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(originalDate.getSeconds(), 2); // If there's also date, separate it with time with 'T'\n\n    var separator = result === '' ? '' : 'T'; // Creates a time string consisting of hour, minute, and second, separated by delimiters, if defined.\n\n    var time = [hour, minute, second].join(timeDelimiter); // HHmmss or HH:mm:ss.\n\n    result = \"\".concat(result).concat(separator).concat(time).concat(tzOffset);\n  }\n\n  return result;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/formatISO/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/toDate/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/toDate/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toDate)\n/* harmony export */ });\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nfunction toDate(argument) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/toDate/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/formatISO/index.js\");\n\n\n// Varaiables. Move later\nconst projectsPanel = document.querySelector('#projects-panel');\nconst projectForm = document.querySelector(\"#projects-panel form\");\nconst addProjectButton = document.querySelector(\"#add-project\");\nconst projectNameInput = document.querySelector(\"#project-name-input\");\n\nconst mainPanel = document.querySelector('main');\nconst mainHeader = document.querySelector('h1');\nconst taskForm = document.querySelector('main > form');\nconst addTaskButton = document.querySelector('main > button');\nconst taskNameInput = document.querySelector('#task-name-input');\nconst taskDetailsInput = document.querySelector('#task-details-input');\nconst taskDateInput = document.querySelector('#task-date-input');\nconst taskUrgentInput = document.querySelector('#task-urgent-input');\nconst taskSubmitButton = document.querySelector('#submit-task');\n\n// Data stuff\nlet currentProjects = !localStorage.length\n  ? []\n  : JSON.parse(localStorage.getItem(\"projects\"));\n\n// Adding methods to projects\n// This saves getId for each proj; inefficient\n// currentProjects.forEach(proj => {\n//   proj.getId = function () {\n//     console.log(this.id);\n//   }\n// })\n\n// This doesn't work\n// \"this\" points to index.js\n// const getId = () => {\n//   console.log(this);\n// }\n// currentProjects.forEach(proj => {\n//   proj.getId = getId;\n// })\n// console.log(currentProjects);\n\n\n\n\nfunction getName() {\n  console.log(this.name);\n}\n\nfunction Project(name) {\n  this.name = name;\n  this.tasks = [\n    // {\n    //   name: 'work',\n    //   details: 'carrots, eggs, milk',\n    //   due: '1-1-2019',\n    //   urgent: false,\n    //   id: 'work-task-0'\n    // },\n    // {\n    //   name: 'shop',\n    //   details: '',\n    //   due: '',\n    //   urgent: false,\n    //   id: 'shop-task-1'\n    // }\n  ];\n}\nfunction Task(name, details, due, urgent) {\n  this.name = name;\n  this.details = details;\n  this.due = due;\n  this.urgent = urgent;\n}\n\n\nconst addItem = (itemObj, container) => {\n  // console.log(container);\n  container.push(itemObj);\n}\nconst removeItem = (itemId, container) => {\n  for (let i = 0; i < container.length; i++) {\n    if (container[i].id === itemId) {\n      container.splice(i, 1);\n    }\n  }\n}\nconst setItemId = (prefix, container) => {\n  for (let i = 0; i < container.length; i++) {\n    container[i].id = prefix + i;\n\n  }\n}\n\nconst updateCurrentProjects = (e) => {\n  if (e.target.classList.contains('delete')) {\n    let projectToDelete = e.target.parentElement.id;\n    removeItem(projectToDelete, currentProjects);\n  } else {\n    let projectName = projectNameInput.value;\n    addItem(new Project(projectName), currentProjects);\n  }\n  // console.log(e.target);\n  // let isProject = e.target.classList.contains('project');\n  // setItemId(isProject, currentProjects);\n  // populateLocalStorage(currentProjects);\n}\nconst populateLocalStorage = (projects) => {\n  localStorage.setItem('projects', JSON.stringify(projects));\n};\n\n// Can I combine updateCurrentProjects and updateTasks into one function?\nconst updateTasks = (container) => {\n  let taskName = taskNameInput.value;\n  let taskDetails = taskDetailsInput.value;\n  let taskDue = taskDateInput.value;\n  let taskUrgent = taskUrgentInput.checked;\n\n  addItem(new Task(taskName, taskDetails, taskDue, taskUrgent), container)\n}\n\n/*\nconst updateTasks = (e) => {\n  // console.log(currentProjects); \n  if (e.target.classList.contains('delete')) {\n    let taskToDelete = e.target.parentElement.id;\n  } else {\n    let taskName = taskNameInput.value;\n    let taskDetails = taskDetailsInput.value;\n    let taskDue = taskDateInput.value;\n    let taskUrgent = taskUrgentInput.checked;\n  }\n\n  // currentProjects.forEach(proj => { \n  //   proj.tasks.forEach(task => {\n  //     if (task.id === taskToDelete) {\n  //       removeItem(taskToDelete, proj.tasks)\n  //       console.log(proj.tasks.length);\n\n  //       let isProject = e.target.classList.contains('project');\n  //       setItemId(isProject, proj.tasks);\n  //       populateLocalStorage(currentProjects);\n  //     }\n\n  //   })\n  // })\n}\n*/\n\n\n// Content creators\nconst createProjectContent = (projObj) => {\n  const projectListItem = document.createElement('li');\n  projectListItem.classList.add('project-item');\n\n  const projectWrapper = document.createElement('div');\n  projectWrapper.classList.add('project-wrapper');\n  projectWrapper.id = projObj.id;\n\n  const projectTitle = document.createElement('h3');\n  projectTitle.textContent = projObj.name\n\n  const projectDeleteBtn = document.createElement('button');\n  projectDeleteBtn.classList.add('delete');\n  projectDeleteBtn.classList.add('project');\n  projectDeleteBtn.textContent = 'X';\n  \n  projectDeleteBtn.addEventListener('click', (e) => {\n    updateCurrentProjects(e);\n\n\n\n    // Reset project Id's after deleting project\n    setItemId('project-', currentProjects);\n    //Reset task Id's within each project after deleting project\n    currentProjects.forEach(proj => {\n      let itemIdPrefix = `${proj.id}-task-`;\n      setItemId(itemIdPrefix, proj.tasks);\n    })\n    populateLocalStorage(currentProjects);\n    \n    display(currentProjects);\n    addProjectListeners();\n  })\n  \n  projectWrapper.append(projectTitle, projectDeleteBtn);\n  projectListItem.append(projectWrapper);\n  return projectListItem;\n};\nconst createTaskContent = (taskObj) => {\n  const taskListItem = document.createElement('li');\n  taskListItem.classList.add('task-item');\n\n  const taskWrapper = document.createElement('div');\n  taskWrapper.classList.add('task-wrapper');\n  taskWrapper.id = taskObj.id;\n\n  const taskInfoWrapper = document.createElement('div');\n  const taskName = document.createElement('h3');\n  const taskDetails = document.createElement('p');\n  const taskSpanWrapper = document.createElement('div');\n  const taskDue = document.createElement('span');\n  const taskUrgent = document.createElement('span');\n  const taskDeleteBtn = document.createElement('button');\n  taskDeleteBtn.classList.add('delete');\n  taskDeleteBtn.classList.add('task');\n\n  taskName.textContent = taskObj.name;\n  taskDetails.textContent = taskObj.details;\n  taskDue.textContent = taskObj.due;\n  taskUrgent.textContent = taskObj.urgent;\n  taskDeleteBtn.textContent = 'X';\n  taskDeleteBtn.dataset.delete = taskObj.id;\n\n  taskDeleteBtn.addEventListener('click', (e) => {\n    // Can also use e.target.parentElement.id\n    // This is the way when deleting projects\n    let taskToDelete = e.target.dataset.delete;\n\n    for (let i = 0; i < currentProjects.length; i++) {\n      for (let j = 0; j < currentProjects[i].tasks.length; j++) {\n        if (currentProjects[i].tasks[j].id === taskToDelete) {\n          currentProjects[i].tasks.splice(j, 1);\n          populateLocalStorage(currentProjects);\n\n          if (mainPanel.dataset.shownTasks === 'project') {\n            display(currentProjects[i].tasks, false);\n          }\n\n          if (mainPanel.dataset.shownTasks === 'all') {\n            let allTasks = [];\n            currentProjects.forEach(proj => {\n              proj.tasks.forEach(task => {\n                allTasks.push(task)\n                // console.log(task);\n              })\n            })\n            display(allTasks, false);\n          }\n\n          if (mainPanel.dataset.shownTasks === 'today') {\n            const date = (0,date_fns__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(new Date(), {representation: 'date'});\n  \n            let todayTasks = [];\n            currentProjects.forEach(proj => {\n              proj.tasks.forEach(task => {  \n                if (task.due === date) {\n                  todayTasks.push(task);\n                }\n              })\n            })\n  \n            display(todayTasks, false);\n          }\n\n\n        }\n      }\n    } \n\n    // currentProjects.forEach(proj => {\n    //   removeItem(taskToDelete, proj.tasks); \n    // })\n\n    // currentProjects.forEach(proj => {\n    //   proj.tasks.forEach(task => {\n    //     if (task.id === taskToDelete) {\n\n    //       console.log(task)\n\n    //       proj.tasks.splice(task, 1);\n\n    //       // let itemIdPrefix = `${proj.id}-task-`;\n    //       // setItemId(itemIdPrefix, proj.tasks);\n    //       // populateLocalStorage(currentProjects);\n\n    //       console.log(proj.tasks);\n\n    //       // if (mainPanel.classList.contains('project')) {\n    //       //   display(proj.tasks, false);\n    //       // }\n\n    //       display(proj.tasks, false);\n    //     }\n    //   })\n    // })\n\n    // currentProjects.forEach(proj => {\n    //   proj.tasks.forEach(task => {\n    //     if (task.id === taskToDelete) {\n    //       proj.tasks.splice(task, 1);\n\n    //       let itemIdPrefix = `${proj.id}-task-`;\n    //       setItemId(itemIdPrefix, proj.tasks);\n    //       populateLocalStorage(currentProjects);\n\n    //       display(proj.tasks, false);\n\n    //     }\n    //   })\n    // })\n\n  })\n\n  taskSpanWrapper.append(taskDue, taskUrgent);\n  taskInfoWrapper.append(taskName, taskDetails);\n  taskWrapper.append(taskInfoWrapper, taskSpanWrapper, taskDeleteBtn);\n  taskListItem.append(taskWrapper);\n  \n  return taskListItem;\n}\n\n\n// Display controllers\nconst showForm = (form, input, initBtn) => {\n  form.classList.remove(\"hidden\");\n  input.focus();\n  initBtn.classList.add(\"hidden\");\n};\nconst hideForm = (form, initBtn) => {\n  form.reset();\n  form.classList.add(\"hidden\");\n  initBtn.classList.remove(\"hidden\");\n};\nconst display = (list, isProject = true) => {\n  let oldList;\n  let listId;\n  let container;\n  let form;\n\n  if (isProject) {\n    oldList = document.querySelector('#project-list');\n    listId = 'project-list';\n    container = projectsPanel;\n    form = projectForm;\n  } else {\n    oldList = document.querySelector('#task-list');\n    listId = 'task-list';\n    container = mainPanel;\n    form = taskForm;\n  }\n\n  if (container.contains(oldList)) {\n    oldList.remove();\n  }\n\n  const currentList = document.createElement('ul');\n  currentList.id = listId;\n  list.forEach(item => { \n    currentList.append(\n      isProject ? createProjectContent(item) : createTaskContent(item)\n    );\n  })\n\n  container.insertBefore(currentList, form);\n}\n\n\n// Listeners\nconst addButtonListeners = () => {\n  const applicationButtons = document.querySelectorAll('button');\n  // console.log(applicationButtons);\n  applicationButtons.forEach(btn => {\n    btn.addEventListener('click', (e) => {\n      // Buttons in the projects panel\n      if (e.target.classList.contains('project')) {\n\n        if (e.target.id === 'add-project') {\n          showForm(projectForm, projectNameInput, addProjectButton);\n        }\n\n        if (e.target.id === 'cancel-project') {\n          hideForm(projectForm, addProjectButton);\n        }\n\n        if (e.target.id === 'submit-project') {\n          updateCurrentProjects(e);\n          setItemId('project-', currentProjects);\n          populateLocalStorage(currentProjects);\n\n          display(currentProjects);\n          hideForm(projectForm, addProjectButton);\n          addProjectListeners();\n        }\n      }\n\n      if (e.target.classList.contains('task')) {\n\n        if (e.target.id === 'add-task') {\n          showForm(taskForm, taskNameInput, addTaskButton);\n        }\n\n        if (e.target.id === 'cancel-task') {\n          hideForm(taskForm, addTaskButton);\n        }\n\n        if (e.target.id === 'submit-task') {\n          let taskName = taskNameInput.value;\n          let taskDetails = taskDetailsInput.value;\n          let taskDue = taskDateInput.value;\n          let taskUrgent = taskUrgentInput.checked;\n\n          let targetProject = e.target.dataset.submitTaskTo;\n          currentProjects.forEach(proj => {\n            if (proj.id === targetProject) {\n              addItem(new Task(taskName, taskDetails, taskDue, taskUrgent), proj.tasks);\n\n              let itemIdPrefix = `${proj.id}-task-`;\n              setItemId(itemIdPrefix, proj.tasks);\n              populateLocalStorage(currentProjects);\n\n              display(proj.tasks, false);\n              hideForm(taskForm, addTaskButton);\n            }\n          })\n        }        \n      }\n\n      if (e.target.classList.contains('view')) {\n\n        if (e.target.id === 'all') {\n          mainHeader.textContent = 'All Tasks';\n          mainPanel.dataset.shownTasks = e.target.id;\n\n          let allTasks = [];\n          currentProjects.forEach(proj => {\n            proj.tasks.forEach(task => {\n              allTasks.push(task)\n              // console.log(task);\n            })\n          })\n\n          display(allTasks, false);\n        }\n\n        if (e.target.id === 'today') {\n          mainHeader.textContent = 'Tasks Due Today';\n          mainPanel.dataset.shownTasks = e.target.id;\n          // const date = new Date();\n          // const [month, day, year] = [\n          //   date.getMonth(), \n          //   date.getDate(), \n          //   date.getFullYear()\n          // ];\n\n          const date = (0,date_fns__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(new Date(), {representation: 'date'});\n          console.log(date);\n\n          // console.log(date);\n          // console.log(month, day, year);\n\n          // let test = parse('2016-01-01', 'yyyy-MM-dd', new Date());\n          // console.log(test);\n\n          // let test2 = toDate(new Date(+year, +month, +day))\n          // console.log(test2)\n\n          let todayTasks = [];\n          currentProjects.forEach(proj => {\n            proj.tasks.forEach(task => {\n              // let test3 = parseISO(task.due, 'yyyy-MM-dd', new Date());\n\n              // console.log(parse(task.due, 'yyyy-MM-dd', new Date()));\n\n              // let test3 = parse(task.due, 'yyyy-MM-dd', new Date())\n\n              // let test3 = formatISO(task.due, {representation: 'date'})\n\n              // console.log(test3)\n\n              // let test4 = compareAsc(test3, test2);\n              // console.log(test4);\n\n              // if (compareAsc(test3, date) === 0) {\n              //   console.log(task);\n              // }\n\n              if (task.due === date) {\n                // console.log(task);\n                todayTasks.push(task);\n              }\n            })\n          })\n\n          display(todayTasks, false);\n        }\n\n\n      }\n    })\n  })\n}\n\nconst addProjectListeners = () => {\n  const projects = document.querySelectorAll('.project-wrapper h3');\n  projects.forEach(proj => {\n    proj.addEventListener('click', (e) => {\n      // console.log('test');\n\n      let projectToDisplay = e.target.parentElement.id;\n      // console.log(projectToDisplay);\n      currentProjects.forEach(proj => {\n        if (proj.id === projectToDisplay) {\n          // mainPanel.classList.add('project');\n          // mainPanel.classList.remove('view');\n          mainPanel.dataset.shownTasks = 'project';\n          mainHeader.textContent = proj.name;\n\n\n          taskSubmitButton.dataset.submitTaskTo = proj.id;\n\n          display(proj.tasks, false);\n          hideForm(taskForm, addTaskButton);\n          addTaskButton.classList.remove('hidden');\n        }\n      })\n    })\n  })\n}\n\n\ndisplay(currentProjects);\naddButtonListeners();\naddProjectListeners();\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;