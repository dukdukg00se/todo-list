/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ requiredArgs)\n/* harmony export */ });\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/_lib/requiredArgs/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/toInteger/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/toInteger/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toInteger)\n/* harmony export */ });\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/_lib/toInteger/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/getDay/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/getDay/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDay)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nfunction getDay(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate);\n  var day = date.getDay();\n  return day;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/getDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameDay/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameDay/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSameDay)\n/* harmony export */ });\n/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfDay/index.js */ \"./node_modules/date-fns/esm/startOfDay/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n * \n * @example\n * // Are 4 September and 4 October in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n * \n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\n\nfunction isSameDay(dirtyDateLeft, dirtyDateRight) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(2, arguments);\n  var dateLeftStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateLeft);\n  var dateRightStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isSameDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameWeek/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameWeek/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSameWeek)\n/* harmony export */ });\n/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfWeek/index.js */ \"./node_modules/date-fns/esm/startOfWeek/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n * \n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * var result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nfunction isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(2, arguments);\n  var dateLeftStartOfWeek = (0,_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = (0,_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isSameWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isThisWeek/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/isThisWeek/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isThisWeek)\n/* harmony export */ });\n/* harmony import */ var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isSameWeek/index.js */ \"./node_modules/date-fns/esm/isSameWeek/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\nfunction isThisWeek(dirtyDate, options) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  return (0,_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate, Date.now(), options);\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isThisWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isToday/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/esm/isToday/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isToday)\n/* harmony export */ });\n/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isSameDay/index.js */ \"./node_modules/date-fns/esm/isSameDay/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nfunction isToday(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  return (0,_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate, Date.now());\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isToday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/startOfDay/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/startOfDay/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ startOfDay)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nfunction startOfDay(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/startOfDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/startOfWeek/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/esm/startOfWeek/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ startOfWeek)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ \"./node_modules/date-fns/esm/_lib/toInteger/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nfunction startOfWeek(dirtyDate, dirtyOptions) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/startOfWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/toDate/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/toDate/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toDate)\n/* harmony export */ });\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nfunction toDate(argument) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/toDate/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isToday/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isThisWeek/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/getDay/index.js\");\n\n\n// Varaiables. Move later\nconst projectsPanel = document.querySelector('#projects-panel');\nconst projectForm = document.querySelector(\"#projects-panel form\");\nconst addProjectButton = document.querySelector(\"#add-project\");\nconst projectNameInput = document.querySelector(\"#project-name-input\");\n\nconst mainPanel = document.querySelector('main');\nconst mainHeader = document.querySelector('h1');\nconst taskForm = document.querySelector('main > form');\nconst addTaskButton = document.querySelector('main > button');\nconst taskNameInput = document.querySelector('#task-name-input');\nconst taskDetailsInput = document.querySelector('#task-details-input');\nconst taskDateInput = document.querySelector('#task-date-input');\nconst taskUrgentInput = document.querySelector('#task-urgent-input');\nconst taskSubmitButton = document.querySelector('#submit-task');\n\n// Data stuff\nlet currentProjects = !localStorage.length\n  ? []\n  : JSON.parse(localStorage.getItem(\"projects\"));\n\n// Adding methods to projects\n// This saves getId for each proj; inefficient\n// currentProjects.forEach(proj => {\n//   proj.getId = function () {\n//     console.log(this.id);\n//   }\n// })\n\n// This doesn't work\n// \"this\" points to index.js\n// const getId = () => {\n//   console.log(this);\n// }\n// currentProjects.forEach(proj => {\n//   proj.getId = getId;\n// })\n// console.log(currentProjects);\n\n\nfunction getName() {\n  console.log(this.name);\n}\n\nfunction Project(name) {\n  this.name = name;\n  this.tasks = [\n\n  ];\n}\nfunction Task(name, details, due, urgent) {\n  this.name = name;\n  this.details = details;\n  this.due = due;\n  this.urgent = urgent;\n}\n\n\nconst addItem = (itemObj, container) => {\n  // console.log(container);\n  container.push(itemObj);\n}\nconst removeItem = (itemId, container) => {\n  for (let i = 0; i < container.length; i++) {\n    if (container[i].id === itemId) {\n      container.splice(i, 1);\n    }\n  }\n}\nconst setItemId = (prefix, container) => {\n  for (let i = 0; i < container.length; i++) {\n    container[i].id = prefix + i;\n\n  }\n}\n\nconst updateCurrentProjects = (e) => {\n  if (e.target.classList.contains('delete')) {\n    let projectToDelete = e.target.parentElement.id;\n    removeItem(projectToDelete, currentProjects);\n  } else {\n    let projectName = projectNameInput.value;\n    addItem(new Project(projectName), currentProjects);\n  }\n  // console.log(e.target);\n  // let isProject = e.target.classList.contains('project');\n  // setItemId(isProject, currentProjects);\n  // populateLocalStorage(currentProjects);\n}\nconst populateLocalStorage = (projects) => {\n  localStorage.setItem('projects', JSON.stringify(projects));\n};\n\n// Can I combine updateCurrentProjects and updateTasks into one function?\nconst updateTasks = (container) => {\n  let taskName = taskNameInput.value;\n  let taskDetails = taskDetailsInput.value;\n  let taskDue = taskDateInput.value;\n  let taskUrgent = taskUrgentInput.checked;\n\n  addItem(new Task(taskName, taskDetails, taskDue, taskUrgent), container)\n}\n\n/*\nconst updateTasks = (e) => {\n  // console.log(currentProjects); \n  if (e.target.classList.contains('delete')) {\n    let taskToDelete = e.target.parentElement.id;\n  } else {\n    let taskName = taskNameInput.value;\n    let taskDetails = taskDetailsInput.value;\n    let taskDue = taskDateInput.value;\n    let taskUrgent = taskUrgentInput.checked;\n  }\n\n  // currentProjects.forEach(proj => { \n  //   proj.tasks.forEach(task => {\n  //     if (task.id === taskToDelete) {\n  //       removeItem(taskToDelete, proj.tasks)\n  //       console.log(proj.tasks.length);\n\n  //       let isProject = e.target.classList.contains('project');\n  //       setItemId(isProject, proj.tasks);\n  //       populateLocalStorage(currentProjects);\n  //     }\n\n  //   })\n  // })\n}\n*/\n\n\n// Content creators\nconst createProjectContent = (projObj) => {\n  const projectListItem = document.createElement('li');\n  projectListItem.classList.add('project-item');\n\n  const projectWrapper = document.createElement('div');\n  projectWrapper.classList.add('project-wrapper');\n  projectWrapper.id = projObj.id;\n\n  const projectTitle = document.createElement('h3');\n  projectTitle.textContent = projObj.name\n\n  const projectDeleteBtn = document.createElement('button');\n  projectDeleteBtn.classList.add('delete');\n  projectDeleteBtn.classList.add('project');\n  projectDeleteBtn.textContent = 'X';\n  \n  projectDeleteBtn.addEventListener('click', (e) => {\n    // updateCurrentProjects(e);\n\n    let projectToDelete = e.target.parentElement.id;\n    removeItem(projectToDelete, currentProjects);\n\n\n    // // Reset project Id's after deleting project\n    // setItemId('project-', currentProjects);\n    // // Reset task Id's within each project after deleting project\n    // currentProjects.forEach(proj => {\n    //   let itemIdPrefix = `${proj.id}-task-`;\n    //   setItemId(itemIdPrefix, proj.tasks);\n    // })\n    populateLocalStorage(currentProjects);\n    \n    display(currentProjects);\n    addProjectListeners();\n  })\n  \n  projectWrapper.append(projectTitle, projectDeleteBtn);\n  projectListItem.append(projectWrapper);\n  return projectListItem;\n};\nconst createTaskContent = (taskObj) => {\n  const taskListItem = document.createElement('li');\n  taskListItem.classList.add('task-item');\n\n  const taskWrapper = document.createElement('div');\n  taskWrapper.classList.add('task-wrapper');\n  taskWrapper.id = taskObj.id;\n\n  const taskInfoWrapper = document.createElement('div');\n  const taskName = document.createElement('h3');\n  const taskDetails = document.createElement('p');\n  const taskSpanWrapper = document.createElement('div');\n  const taskDue = document.createElement('span');\n  const taskUrgent = document.createElement('span');\n  const taskDeleteBtn = document.createElement('button');\n  taskDeleteBtn.classList.add('delete');\n  taskDeleteBtn.classList.add('task');\n\n  taskName.textContent = taskObj.name;\n  taskDetails.textContent = taskObj.details;\n  taskDue.textContent = taskObj.due;\n  taskUrgent.textContent = taskObj.urgent;\n\n\n  taskDeleteBtn.textContent = 'X';\n  taskDeleteBtn.dataset.delete = taskObj.id;\n\n  taskDeleteBtn.addEventListener('click', (e) => {\n    // Can also use e.target.parentElement.id\n    // This is the way when deleting projects\n    let taskToDelete = e.target.dataset.delete;\n\n    for (let i = 0; i < currentProjects.length; i++) {\n      for (let j = 0; j < currentProjects[i].tasks.length; j++) {\n        if (currentProjects[i].tasks[j].id === taskToDelete) {\n          currentProjects[i].tasks.splice(j, 1);\n          populateLocalStorage(currentProjects);\n\n          if (mainPanel.dataset.shownTasks === 'project') {\n            display(currentProjects[i].tasks, false);\n          }\n\n          if (mainPanel.dataset.shownTasks === 'all') {\n            let allTasks = [];\n            currentProjects.forEach(proj => {\n              proj.tasks.forEach(task => {\n                allTasks.push(task)\n                // console.log(task);\n              })\n            })\n            display(allTasks, false);\n          }\n\n          if (mainPanel.dataset.shownTasks === 'today') {\n  \n            let todayTasks = [];\n            currentProjects.forEach(proj => {\n              proj.tasks.forEach(task => {\n  \n                if ((0,date_fns__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parseISO(task.due))) {\n                  todayTasks.push(task);\n                }\n  \n              })\n            })\n  \n            display(todayTasks, false);\n          }\n\n          if (mainPanel.dataset.shownTasks === 'week') {\n\n            let weekTasks = [];\n            currentProjects.forEach(proj => {\n              proj.tasks.forEach(task => {\n  \n                if (task.due) {\n                  if ((0,date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parseISO(task.due), {weekStartsOn: (0,date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(new Date())})) {\n                    weekTasks.push(task)\n                  }\n                }\n  \n              })\n            })\n  \n            display(weekTasks, false);\n          }\n\n          if (mainPanel.dataset.shownTasks === 'important') {\n            let importantTasks = [];\n            currentProjects.forEach(proj => {\n              proj.tasks.forEach(task => {\n                if (task.urgent) {\n                  importantTasks.push(task);\n                }\n              })\n            })\n  \n            display(importantTasks, false);\n          }\n        }\n      }\n    } \n\n  })\n\n  taskSpanWrapper.append(taskDue, taskUrgent);\n  taskInfoWrapper.append(taskName, taskDetails);\n  taskWrapper.append(taskInfoWrapper, taskSpanWrapper, taskDeleteBtn);\n  taskListItem.append(taskWrapper);\n  \n  return taskListItem;\n}\n\n\n// Display controllers\nconst showForm = (form, input, initBtn) => {\n  form.classList.remove(\"hidden\");\n  input.focus();\n  initBtn.classList.add(\"hidden\");\n};\nconst hideForm = (form, initBtn) => {\n  form.reset();\n  form.classList.add(\"hidden\");\n  initBtn.classList.remove(\"hidden\");\n};\nconst display = (list, isProject = true) => {\n  let oldList;\n  let listId;\n  let container;\n  let form;\n\n  if (isProject) {\n    oldList = document.querySelector('#project-list');\n    listId = 'project-list';\n    container = projectsPanel;\n    form = projectForm;\n  } else {\n    oldList = document.querySelector('#task-list');\n    listId = 'task-list';\n    container = mainPanel;\n    form = taskForm;\n  }\n\n  if (container.contains(oldList)) {\n    oldList.remove();\n  }\n\n  const currentList = document.createElement('ul');\n  currentList.id = listId;\n  list.forEach(item => { \n    currentList.append(\n      isProject ? createProjectContent(item) : createTaskContent(item)\n    );\n  })\n\n  container.insertBefore(currentList, form);\n}\n\n\n// Listeners\nconst addButtonListeners = () => {\n  const applicationButtons = document.querySelectorAll('button');\n  // console.log(applicationButtons);\n  applicationButtons.forEach(btn => {\n    btn.addEventListener('click', (e) => {\n      // Buttons in the projects panel\n      if (e.target.classList.contains('project')) {\n\n        if (e.target.id === 'add-project') {\n          showForm(projectForm, projectNameInput, addProjectButton);\n        }\n\n        if (e.target.id === 'cancel-project') {\n          hideForm(projectForm, addProjectButton);\n        }\n\n        if (e.target.id === 'submit-project') {\n          updateCurrentProjects(e);\n          setItemId('project-', currentProjects);\n          populateLocalStorage(currentProjects);\n\n          display(currentProjects);\n          hideForm(projectForm, addProjectButton);\n          addProjectListeners();\n        }\n      }\n\n      if (e.target.classList.contains('task')) {\n\n        if (e.target.id === 'add-task') {\n          showForm(taskForm, taskNameInput, addTaskButton);\n        }\n\n        if (e.target.id === 'cancel-task') {\n          hideForm(taskForm, addTaskButton);\n        }\n\n        if (e.target.id === 'submit-task') {\n          let taskName = taskNameInput.value;\n          let taskDetails = taskDetailsInput.value;\n          let taskDue = taskDateInput.value;\n          let taskUrgent = taskUrgentInput.checked;\n\n          let targetProject = e.target.dataset.submitTaskTo;\n          currentProjects.forEach(proj => {\n            if (proj.id === targetProject) {\n              addItem(new Task(taskName, taskDetails, taskDue, taskUrgent), proj.tasks);\n\n              let itemIdPrefix = `${proj.id}-task-`;\n              setItemId(itemIdPrefix, proj.tasks);\n              populateLocalStorage(currentProjects);\n\n              display(proj.tasks, false);\n              hideForm(taskForm, addTaskButton);\n            }\n          })\n        }        \n      }\n\n      if (e.target.classList.contains('view')) {\n\n        if (e.target.id === 'all') {\n          mainHeader.textContent = 'All Tasks';\n          mainPanel.dataset.shownTasks = e.target.id;\n\n          let allTasks = [];\n          currentProjects.forEach(proj => {\n            proj.tasks.forEach(task => {\n              allTasks.push(task)\n              // console.log(task);\n            })\n          })\n\n          display(allTasks, false);\n        }\n\n        if (e.target.id === 'today') {\n          mainHeader.textContent = 'Today';\n          mainPanel.dataset.shownTasks = e.target.id;\n\n          let todayTasks = [];\n          currentProjects.forEach(proj => {\n            proj.tasks.forEach(task => {\n\n              if ((0,date_fns__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(parseISO(task.due))) {\n                todayTasks.push(task);\n              }\n\n            })\n          })\n\n          display(todayTasks, false);\n        }\n\n        if (e.target.id === 'week') {\n          mainHeader.textContent = 'Next 7 Days';\n          mainPanel.dataset.shownTasks = e.target.id;\n\n          let weekTasks = [];\n          currentProjects.forEach(proj => {\n            proj.tasks.forEach(task => {\n\n              if (task.due) {\n                if ((0,date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(parseISO(task.due), {weekStartsOn: (0,date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(new Date())})) {\n                  weekTasks.push(task)\n                }\n              }\n\n            })\n          })\n\n          display(weekTasks, false);\n        }\n\n        if (e.target.id === 'important') {\n          mainHeader.textContent = 'Important';\n          mainPanel.dataset.shownTasks = e.target.id;\n\n          let importantTasks = [];\n          currentProjects.forEach(proj => {\n            proj.tasks.forEach(task => {\n              if (task.urgent) {\n                importantTasks.push(task);\n              }\n            })\n          })\n\n          display(importantTasks, false);\n        }\n\n        addTaskButton.classList.add('hidden');\n        taskForm.classList.add('hidden');\n      }\n    })\n  })\n}\n\nconst addProjectListeners = () => {\n  const projects = document.querySelectorAll('.project-wrapper h3');\n  projects.forEach(proj => {\n    proj.addEventListener('click', (e) => {\n      // console.log('test');\n\n      let projectToDisplay = e.target.parentElement.id;\n      // console.log(projectToDisplay);\n      currentProjects.forEach(proj => {\n        if (proj.id === projectToDisplay) {\n          // mainPanel.classList.add('project');\n          // mainPanel.classList.remove('view');\n          mainPanel.dataset.shownTasks = 'project';\n          mainHeader.textContent = proj.name;\n\n\n          taskSubmitButton.dataset.submitTaskTo = proj.id;\n\n          display(proj.tasks, false);\n          hideForm(taskForm, addTaskButton);\n          addTaskButton.classList.remove('hidden');\n        }\n      })\n    })\n  })\n}\n\n\ndisplay(currentProjects);\naddButtonListeners();\naddProjectListeners();\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;