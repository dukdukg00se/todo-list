/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/date-fns/esm/_lib/requiredArgs/index.js":
/*!**************************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/requiredArgs/index.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ requiredArgs)\n/* harmony export */ });\nfunction requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/_lib/requiredArgs/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/_lib/toInteger/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/date-fns/esm/_lib/toInteger/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toInteger)\n/* harmony export */ });\nfunction toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/_lib/toInteger/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/constants/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/constants/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"daysInWeek\": () => (/* binding */ daysInWeek),\n/* harmony export */   \"maxTime\": () => (/* binding */ maxTime),\n/* harmony export */   \"millisecondsInHour\": () => (/* binding */ millisecondsInHour),\n/* harmony export */   \"millisecondsInMinute\": () => (/* binding */ millisecondsInMinute),\n/* harmony export */   \"millisecondsInSecond\": () => (/* binding */ millisecondsInSecond),\n/* harmony export */   \"minTime\": () => (/* binding */ minTime),\n/* harmony export */   \"minutesInHour\": () => (/* binding */ minutesInHour),\n/* harmony export */   \"monthsInQuarter\": () => (/* binding */ monthsInQuarter),\n/* harmony export */   \"monthsInYear\": () => (/* binding */ monthsInYear),\n/* harmony export */   \"quartersInYear\": () => (/* binding */ quartersInYear),\n/* harmony export */   \"secondsInHour\": () => (/* binding */ secondsInHour),\n/* harmony export */   \"secondsInMinute\": () => (/* binding */ secondsInMinute)\n/* harmony export */ });\n/**\n * Days in 1 week.\n *\n * @name daysInWeek\n * @constant\n * @type {number}\n * @default\n */\nvar daysInWeek = 7;\n/**\n * Maximum allowed time.\n *\n * @name maxTime\n * @constant\n * @type {number}\n * @default\n */\n\nvar maxTime = Math.pow(10, 8) * 24 * 60 * 60 * 1000;\n/**\n * Milliseconds in 1 minute\n *\n * @name millisecondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nvar millisecondsInMinute = 60000;\n/**\n * Milliseconds in 1 hour\n *\n * @name millisecondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nvar millisecondsInHour = 3600000;\n/**\n * Milliseconds in 1 second\n *\n * @name millisecondsInSecond\n * @constant\n * @type {number}\n * @default\n */\n\nvar millisecondsInSecond = 1000;\n/**\n * Minimum allowed time.\n *\n * @name minTime\n * @constant\n * @type {number}\n * @default\n */\n\nvar minTime = -maxTime;\n/**\n * Minutes in 1 hour\n *\n * @name minutesInHour\n * @constant\n * @type {number}\n * @default\n */\n\nvar minutesInHour = 60;\n/**\n * Months in 1 quarter\n *\n * @name monthsInQuarter\n * @constant\n * @type {number}\n * @default\n */\n\nvar monthsInQuarter = 3;\n/**\n * Months in 1 year\n *\n * @name monthsInYear\n * @constant\n * @type {number}\n * @default\n */\n\nvar monthsInYear = 12;\n/**\n * Quarters in 1 year\n *\n * @name quartersInYear\n * @constant\n * @type {number}\n * @default\n */\n\nvar quartersInYear = 4;\n/**\n * Seconds in 1 hour\n *\n * @name secondsInHour\n * @constant\n * @type {number}\n * @default\n */\n\nvar secondsInHour = 3600;\n/**\n * Seconds in 1 minute\n *\n * @name secondsInMinute\n * @constant\n * @type {number}\n * @default\n */\n\nvar secondsInMinute = 60;\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/constants/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/getDay/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/getDay/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ getDay)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name getDay\n * @category Weekday Helpers\n * @summary Get the day of the week of the given date.\n *\n * @description\n * Get the day of the week of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {0|1|2|3|4|5|6} the day of week, 0 represents Sunday\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which day of the week is 29 February 2012?\n * const result = getDay(new Date(2012, 1, 29))\n * //=> 3\n */\n\nfunction getDay(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate);\n  var day = date.getDay();\n  return day;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/getDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameDay/index.js":
/*!******************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameDay/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSameDay)\n/* harmony export */ });\n/* harmony import */ var _startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfDay/index.js */ \"./node_modules/date-fns/esm/startOfDay/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day (and year and month)\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n * \n * @example\n * // Are 4 September and 4 October in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n * \n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\n\nfunction isSameDay(dirtyDateLeft, dirtyDateRight) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(2, arguments);\n  var dateLeftStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateLeft);\n  var dateRightStartOfDay = (0,_startOfDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isSameDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isSameWeek/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/isSameWeek/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isSameWeek)\n/* harmony export */ });\n/* harmony import */ var _startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../startOfWeek/index.js */ \"./node_modules/date-fns/esm/startOfWeek/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n\n/**\n * @name isSameWeek\n * @category Week Helpers\n * @summary Are the given dates in the same week (and month and year)?\n *\n * @description\n * Are the given dates in the same week (and month and year)?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the dates are in the same week (and month and year)\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // Are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4))\n * //=> true\n *\n * @example\n * // If week starts with Monday,\n * // are 31 August 2014 and 4 September 2014 in the same week?\n * var result = isSameWeek(new Date(2014, 7, 31), new Date(2014, 8, 4), {\n *   weekStartsOn: 1\n * })\n * //=> false\n * \n * @example\n * // Are 1 January 2014 and 1 January 2015 in the same week?\n * var result = isSameWeek(new Date(2014, 0, 1), new Date(2015, 0, 1))\n * //=> false\n */\nfunction isSameWeek(dirtyDateLeft, dirtyDateRight, dirtyOptions) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(2, arguments);\n  var dateLeftStartOfWeek = (0,_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateLeft, dirtyOptions);\n  var dateRightStartOfWeek = (0,_startOfWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDateRight, dirtyOptions);\n  return dateLeftStartOfWeek.getTime() === dateRightStartOfWeek.getTime();\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isSameWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isThisWeek/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/isThisWeek/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isThisWeek)\n/* harmony export */ });\n/* harmony import */ var _isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isSameWeek/index.js */ \"./node_modules/date-fns/esm/isSameWeek/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n\n/**\n * @name isThisWeek\n * @category Week Helpers\n * @summary Is the given date in the same week as the current date?\n * @pure false\n *\n * @description\n * Is the given date in the same week as the current date?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @param {Object} [options] - the object with options\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Boolean} the date is in this week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // If today is 25 September 2014, is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21))\n * //=> true\n *\n * @example\n * // If today is 25 September 2014 and week starts with Monday\n * // is 21 September 2014 in this week?\n * var result = isThisWeek(new Date(2014, 8, 21), { weekStartsOn: 1 })\n * //=> false\n */\nfunction isThisWeek(dirtyDate, options) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  return (0,_isSameWeek_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate, Date.now(), options);\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isThisWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/isToday/index.js":
/*!****************************************************!*\
  !*** ./node_modules/date-fns/esm/isToday/index.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ isToday)\n/* harmony export */ });\n/* harmony import */ var _isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../isSameDay/index.js */ \"./node_modules/date-fns/esm/isSameDay/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name isToday\n * @category Day Helpers\n * @summary Is the given date today?\n * @pure false\n *\n * @description\n * Is the given date today?\n *\n * > ⚠️ Please note that this function is not present in the FP submodule as\n * > it uses `Date.now()` internally hence impure and can't be safely curried.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to check\n * @returns {Boolean} the date is today\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // If today is 6 October 2014, is 6 October 14:00:00 today?\n * var result = isToday(new Date(2014, 9, 6, 14, 0))\n * //=> true\n */\n\nfunction isToday(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  return (0,_isSameDay_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate, Date.now());\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/isToday/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/parseISO/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/date-fns/esm/parseISO/index.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ parseISO)\n/* harmony export */ });\n/* harmony import */ var _constants_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants/index.js */ \"./node_modules/date-fns/esm/constants/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ \"./node_modules/date-fns/esm/_lib/toInteger/index.js\");\n\n\n\n/**\n * @name parseISO\n * @category Common Helpers\n * @summary Parse ISO string\n *\n * @description\n * Parse the given string in ISO 8601 format and return an instance of Date.\n *\n * Function accepts complete ISO 8601 formats as well as partial implementations.\n * ISO 8601: http://en.wikipedia.org/wiki/ISO_8601\n *\n * If the argument isn't a string, the function cannot parse the string or\n * the values are invalid, it returns Invalid Date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The previous `parse` implementation was renamed to `parseISO`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   parseISO('2016-01-01')\n *   ```\n *\n * - `parseISO` now validates separate date and time values in ISO-8601 strings\n *   and returns `Invalid Date` if the date is invalid.\n *\n *   ```javascript\n *   parseISO('2018-13-32')\n *   //=> Invalid Date\n *   ```\n *\n * - `parseISO` now doesn't fall back to `new Date` constructor\n *   if it fails to parse a string argument. Instead, it returns `Invalid Date`.\n *\n * @param {String} argument - the value to convert\n * @param {Object} [options] - an object with options.\n * @param {0|1|2} [options.additionalDigits=2] - the additional number of digits in the extended year format\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.additionalDigits` must be 0, 1 or 2\n *\n * @example\n * // Convert string '2014-02-11T11:30:30' to date:\n * const result = parseISO('2014-02-11T11:30:30')\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert string '+02014101' to date,\n * // if the additional number of digits in the extended year format is 1:\n * const result = parseISO('+02014101', { additionalDigits: 1 })\n * //=> Fri Apr 11 2014 00:00:00\n */\n\nfunction parseISO(argument, dirtyOptions) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var options = dirtyOptions || {};\n  var additionalDigits = options.additionalDigits == null ? 2 : (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options.additionalDigits);\n\n  if (additionalDigits !== 2 && additionalDigits !== 1 && additionalDigits !== 0) {\n    throw new RangeError('additionalDigits must be 0, 1 or 2');\n  }\n\n  if (!(typeof argument === 'string' || Object.prototype.toString.call(argument) === '[object String]')) {\n    return new Date(NaN);\n  }\n\n  var dateStrings = splitDateString(argument);\n  var date;\n\n  if (dateStrings.date) {\n    var parseYearResult = parseYear(dateStrings.date, additionalDigits);\n    date = parseDate(parseYearResult.restDateString, parseYearResult.year);\n  }\n\n  if (!date || isNaN(date.getTime())) {\n    return new Date(NaN);\n  }\n\n  var timestamp = date.getTime();\n  var time = 0;\n  var offset;\n\n  if (dateStrings.time) {\n    time = parseTime(dateStrings.time);\n\n    if (isNaN(time)) {\n      return new Date(NaN);\n    }\n  }\n\n  if (dateStrings.timezone) {\n    offset = parseTimezone(dateStrings.timezone);\n\n    if (isNaN(offset)) {\n      return new Date(NaN);\n    }\n  } else {\n    var dirtyDate = new Date(timestamp + time); // js parsed string assuming it's in UTC timezone\n    // but we need it to be parsed in our timezone\n    // so we use utc values to build date in our timezone.\n    // Year values from 0 to 99 map to the years 1900 to 1999\n    // so set year explicitly with setFullYear.\n\n    var result = new Date(0);\n    result.setFullYear(dirtyDate.getUTCFullYear(), dirtyDate.getUTCMonth(), dirtyDate.getUTCDate());\n    result.setHours(dirtyDate.getUTCHours(), dirtyDate.getUTCMinutes(), dirtyDate.getUTCSeconds(), dirtyDate.getUTCMilliseconds());\n    return result;\n  }\n\n  return new Date(timestamp + time + offset);\n}\nvar patterns = {\n  dateTimeDelimiter: /[T ]/,\n  timeZoneDelimiter: /[Z ]/i,\n  timezone: /([Z+-].*)$/\n};\nvar dateRegex = /^-?(?:(\\d{3})|(\\d{2})(?:-?(\\d{2}))?|W(\\d{2})(?:-?(\\d{1}))?|)$/;\nvar timeRegex = /^(\\d{2}(?:[.,]\\d*)?)(?::?(\\d{2}(?:[.,]\\d*)?))?(?::?(\\d{2}(?:[.,]\\d*)?))?$/;\nvar timezoneRegex = /^([+-])(\\d{2})(?::?(\\d{2}))?$/;\n\nfunction splitDateString(dateString) {\n  var dateStrings = {};\n  var array = dateString.split(patterns.dateTimeDelimiter);\n  var timeString; // The regex match should only return at maximum two array elements.\n  // [date], [time], or [date, time].\n\n  if (array.length > 2) {\n    return dateStrings;\n  }\n\n  if (/:/.test(array[0])) {\n    timeString = array[0];\n  } else {\n    dateStrings.date = array[0];\n    timeString = array[1];\n\n    if (patterns.timeZoneDelimiter.test(dateStrings.date)) {\n      dateStrings.date = dateString.split(patterns.timeZoneDelimiter)[0];\n      timeString = dateString.substr(dateStrings.date.length, dateString.length);\n    }\n  }\n\n  if (timeString) {\n    var token = patterns.timezone.exec(timeString);\n\n    if (token) {\n      dateStrings.time = timeString.replace(token[1], '');\n      dateStrings.timezone = token[1];\n    } else {\n      dateStrings.time = timeString;\n    }\n  }\n\n  return dateStrings;\n}\n\nfunction parseYear(dateString, additionalDigits) {\n  var regex = new RegExp('^(?:(\\\\d{4}|[+-]\\\\d{' + (4 + additionalDigits) + '})|(\\\\d{2}|[+-]\\\\d{' + (2 + additionalDigits) + '})$)');\n  var captures = dateString.match(regex); // Invalid ISO-formatted year\n\n  if (!captures) return {\n    year: NaN,\n    restDateString: ''\n  };\n  var year = captures[1] ? parseInt(captures[1]) : null;\n  var century = captures[2] ? parseInt(captures[2]) : null; // either year or century is null, not both\n\n  return {\n    year: century === null ? year : century * 100,\n    restDateString: dateString.slice((captures[1] || captures[2]).length)\n  };\n}\n\nfunction parseDate(dateString, year) {\n  // Invalid ISO-formatted year\n  if (year === null) return new Date(NaN);\n  var captures = dateString.match(dateRegex); // Invalid ISO-formatted string\n\n  if (!captures) return new Date(NaN);\n  var isWeekDate = !!captures[4];\n  var dayOfYear = parseDateUnit(captures[1]);\n  var month = parseDateUnit(captures[2]) - 1;\n  var day = parseDateUnit(captures[3]);\n  var week = parseDateUnit(captures[4]);\n  var dayOfWeek = parseDateUnit(captures[5]) - 1;\n\n  if (isWeekDate) {\n    if (!validateWeekDate(year, week, dayOfWeek)) {\n      return new Date(NaN);\n    }\n\n    return dayOfISOWeekYear(year, week, dayOfWeek);\n  } else {\n    var date = new Date(0);\n\n    if (!validateDate(year, month, day) || !validateDayOfYearDate(year, dayOfYear)) {\n      return new Date(NaN);\n    }\n\n    date.setUTCFullYear(year, month, Math.max(dayOfYear, day));\n    return date;\n  }\n}\n\nfunction parseDateUnit(value) {\n  return value ? parseInt(value) : 1;\n}\n\nfunction parseTime(timeString) {\n  var captures = timeString.match(timeRegex);\n  if (!captures) return NaN; // Invalid ISO-formatted time\n\n  var hours = parseTimeUnit(captures[1]);\n  var minutes = parseTimeUnit(captures[2]);\n  var seconds = parseTimeUnit(captures[3]);\n\n  if (!validateTime(hours, minutes, seconds)) {\n    return NaN;\n  }\n\n  return hours * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInHour + minutes * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInMinute + seconds * 1000;\n}\n\nfunction parseTimeUnit(value) {\n  return value && parseFloat(value.replace(',', '.')) || 0;\n}\n\nfunction parseTimezone(timezoneString) {\n  if (timezoneString === 'Z') return 0;\n  var captures = timezoneString.match(timezoneRegex);\n  if (!captures) return 0;\n  var sign = captures[1] === '+' ? -1 : 1;\n  var hours = parseInt(captures[2]);\n  var minutes = captures[3] && parseInt(captures[3]) || 0;\n\n  if (!validateTimezone(hours, minutes)) {\n    return NaN;\n  }\n\n  return sign * (hours * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInHour + minutes * _constants_index_js__WEBPACK_IMPORTED_MODULE_2__.millisecondsInMinute);\n}\n\nfunction dayOfISOWeekYear(isoWeekYear, week, day) {\n  var date = new Date(0);\n  date.setUTCFullYear(isoWeekYear, 0, 4);\n  var fourthOfJanuaryDay = date.getUTCDay() || 7;\n  var diff = (week - 1) * 7 + day + 1 - fourthOfJanuaryDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n} // Validation functions\n// February is null to handle the leap year (using ||)\n\n\nvar daysInMonths = [31, null, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n\nfunction validateDate(year, month, date) {\n  return month >= 0 && month <= 11 && date >= 1 && date <= (daysInMonths[month] || (isLeapYearIndex(year) ? 29 : 28));\n}\n\nfunction validateDayOfYearDate(year, dayOfYear) {\n  return dayOfYear >= 1 && dayOfYear <= (isLeapYearIndex(year) ? 366 : 365);\n}\n\nfunction validateWeekDate(_year, week, day) {\n  return week >= 1 && week <= 53 && day >= 0 && day <= 6;\n}\n\nfunction validateTime(hours, minutes, seconds) {\n  if (hours === 24) {\n    return minutes === 0 && seconds === 0;\n  }\n\n  return seconds >= 0 && seconds < 60 && minutes >= 0 && minutes < 60 && hours >= 0 && hours < 25;\n}\n\nfunction validateTimezone(_hours, minutes) {\n  return minutes >= 0 && minutes <= 59;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/parseISO/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/startOfDay/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/date-fns/esm/startOfDay/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ startOfDay)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * const result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nfunction startOfDay(dirtyDate) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/startOfDay/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/startOfWeek/index.js":
/*!********************************************************!*\
  !*** ./node_modules/date-fns/esm/startOfWeek/index.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ startOfWeek)\n/* harmony export */ });\n/* harmony import */ var _toDate_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../toDate/index.js */ \"./node_modules/date-fns/esm/toDate/index.js\");\n/* harmony import */ var _lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../_lib/toInteger/index.js */ \"./node_modules/date-fns/esm/_lib/toInteger/index.js\");\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n\n\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * const result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nfunction startOfWeek(dirtyDate, dirtyOptions) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : (0,_lib_toInteger_index_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = (0,_toDate_index_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/startOfWeek/index.js?");

/***/ }),

/***/ "./node_modules/date-fns/esm/toDate/index.js":
/*!***************************************************!*\
  !*** ./node_modules/date-fns/esm/toDate/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ toDate)\n/* harmony export */ });\n/* harmony import */ var _lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../_lib/requiredArgs/index.js */ \"./node_modules/date-fns/esm/_lib/requiredArgs/index.js\");\n\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nfunction toDate(argument) {\n  (0,_lib_requiredArgs_index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}\n\n//# sourceURL=webpack://todo-list/./node_modules/date-fns/esm/toDate/index.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _modules_content_fns__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/content-fns */ \"./src/modules/content-fns.js\");\n/* harmony import */ var _modules_display_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/display-fns */ \"./src/modules/display-fns.js\");\n/* harmony import */ var _modules_listener_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/listener-fns */ \"./src/modules/listener-fns.js\");\n/* harmony import */ var _modules_data_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/data-fns */ \"./src/modules/data-fns.js\");\n/* harmony import */ var _modules_data_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/data.js */ \"./src/modules/data.js\");\n\n\n\n\n\n\n// console.log(data.projects[0]);\n\nconst displayCtrlr = (() => {\n\n  _modules_display_fns__WEBPACK_IMPORTED_MODULE_1__.setMainPanel();\n  _modules_display_fns__WEBPACK_IMPORTED_MODULE_1__.setProjPanel(_modules_data_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"].projects);\n  _modules_display_fns__WEBPACK_IMPORTED_MODULE_1__.hlNavSelection();\n\n  _modules_listener_fns__WEBPACK_IMPORTED_MODULE_2__.addMenuToggListener('click', _modules_display_fns__WEBPACK_IMPORTED_MODULE_1__.toggleMenu);\n  _modules_listener_fns__WEBPACK_IMPORTED_MODULE_2__.addNavListListeners('click', _modules_display_fns__WEBPACK_IMPORTED_MODULE_1__.manageNavResponse);\n  _modules_listener_fns__WEBPACK_IMPORTED_MODULE_2__.addPageBtnListeners('click', _modules_display_fns__WEBPACK_IMPORTED_MODULE_1__.managePageBtns);\n\n  // let currentDisplay = data.navSelection;\n  // highlight2(document.getElementById(currentDisplay));\n  // display.setMain(currentDisplay);\n\n  // display.setNav(data.projects);\n\n  // listenersCtrlr.addMenuToggListener();\n  // listenersCtrlr.addThemeToggListener();\n  // listenersCtrlr.addPageBtnListeners();\n  // listenersCtrlr.addNavListsListeners();\n})();\n\n\n\n\n\n\n// import {\n//   getDay,\n//   isThisWeek,\n//   isToday,\n//   parseISO\n// } from \"date-fns\";\n// import content from './modules/content.js';\n\n// const dataController = (() => {\n//   let currentProjects = !JSON.parse(localStorage.getItem('projects')) \n//     ? [] \n//     : JSON.parse(localStorage.getItem('projects'));\n\n//   let currentNavSelection = !localStorage.getItem('display')\n//     ? 'all' \n//     : localStorage.getItem('display'); \n\n\n//   const initNewItem = (input) => {\n//     let item, container, idPrefix;\n  \n//     if (input === 'submit-project') {\n//       const projName = document.querySelector(\"#project-name-input\").value;\n//       item = new Project(projName);\n//       container = dataController.currentProjects;\n//       idPrefix = 'project-'\n//     } else if (input === 'submit-task') {\n//       const taskName = document.querySelector('#task-name-input').value;\n//       const taskDetails = document.querySelector('#task-details-input').value;\n//       const taskDue = document.querySelector('#task-date-input').value;\n//       const taskImportant = document.querySelector('#task-important-input').checked;\n//       let selectedProject = document.querySelector('main').dataset.selected;\n//       item = new Task(taskName, taskDetails, taskDue, taskImportant)\n  \n//       dataController.currentProjects.forEach(proj => {\n//         if (proj.id === selectedProject) {\n//           container = proj.tasks;\n//           idPrefix = `${proj.id}-task-`;\n//         }\n//       })\n//     }\n  \n//     add(item, container);\n//     setId(idPrefix, container);\n//     populateLocalStorage(currentProjects);\n  \n//     return container;\n//   }\n\n//   const deleteItem = (item, container) => {\n//     remove(item, container);\n//     populateLocalStorage(currentProjects);\n  \n//     return container;\n//   }\n\n//   const filterTasks = (filter) => {\n//     let filteredTasks = [];\n  \n//     switch (filter) {\n//       case 'all':\n//         currentProjects.forEach(proj => {\n//           proj.tasks.forEach(task => {\n//             filteredTasks.push(task);\n//           });\n//         });\n//         break;\n//       case 'today':\n//         currentProjects.forEach(proj => {\n//           proj.tasks.forEach(task => {\n//             if (isToday(parseISO(task.due))) {\n//               filteredTasks.push(task);\n//             }\n//           });\n//         });\n//         break;\n//       case 'week':\n//         currentProjects.forEach(proj => {\n//           proj.tasks.forEach(task => {\n//             if (task.due) {\n//               if (isThisWeek(parseISO(task.due), {weekStartsOn: getDay(new Date())})) {\n//                 filteredTasks.push(task);\n//               }\n//             }\n//           });\n//         });\n//         break;\n//       case 'important':\n//         currentProjects.forEach(proj => {\n//           proj.tasks.forEach(task => {\n//             if (task.important) {\n//               filteredTasks.push(task);\n//             }\n//           });\n//         });\n//         break;\n//       default:\n//         currentProjects.forEach(proj => {\n//           if (proj.id === filter) {\n//             filteredTasks = proj.tasks;\n//           }\n//         })\n//     }\n  \n//     return filteredTasks;\n//   }\n\n//   const populateLocalStorage = (input) => {\n\n//     if (typeof input === 'object') {\n//       localStorage.setItem('projects', JSON.stringify(input));\n//     } else {\n//       localStorage.setItem('display', input);\n//     }\n    \n//   };\n\n\n//   // Delete???\n//   const saveNavSelection = (input) => {\n//     currentNavSelection = input;\n//     populateLocalStorage(input);\n//     console.log(currentNavSelection);\n//   }\n\n\n//   /* Object constructors */\n//   function Project(name) {\n//     this.name = name;\n//     this.tasks = [];\n//   }\n\n//   function Task(name, details, due, important) {\n//     this.name = name;\n//     this.details = details;\n//     this.due = due;\n//     this.important = important;\n//     this.completed = false;\n//   }\n\n//   /* Helper functions */\n//   // Add task/proj items\n//   const add = (obj, arr) => {\n//     arr.push(obj);\n//   }\n\n//   // Delete task/proj items\n//   const remove = (objId, arr) => {\n//     for (let i = 0; i < arr.length; i++) {\n//       if (arr[i].id === objId) {\n//         arr.splice(i, 1);\n//       }\n//     }\n//   }\n\n//   // Set task/proj id's after adding to list\n//   const setId = (prefix, arr) => {\n//     for (let i = 0; i < arr.length; i++) {\n//       arr[i].id = prefix + i;\n//     }\n//   }\n\n//   return {\n//     currentProjects,\n//     currentNavSelection,\n//     // updateData,\n//     initNewItem,\n//     deleteItem,\n//     filterTasks,\n//     populateLocalStorage,\n//     // saveNavSelection\n//   }\n// })();\n\n// const displayController = (() => {\n\n\n//   // Set initial display to \"All\"\n//   function ctrlAddTaskBtn(input) {\n//     const addTaskBtn = document.querySelector('main > button');\n\n//     switch (input) {\n//     case 'all':\n//     case 'today':\n//     case 'week':\n//     case 'important':\n//       addTaskBtn.classList.add('hidden');\n//       break;\n//     default:\n//       addTaskBtn.classList.remove('hidden');\n//     }\n//   }\n//   // Highlight displayed nav selection \n//   let highlighted;\n//   function highlight(item) {\n//     if (highlighted) {\n//       highlighted.classList.remove('highlight');\n//     }\n\n//     highlighted = item;\n//     highlighted.classList.add('highlight');\n//   }\n\n//   let selection = dataController.currentNavSelection;\n//   setMainHeader(selection);\n//   document.querySelector('main').dataset.selected = selection;\n//   display(dataController.filterTasks(selection));\n//   ctrlAddTaskBtn(selection);\n//   // After moving listenerController below\n//   // Need to add task list listener\n\n\n\n//   display(dataController.currentProjects);\n//   highlight(document.getElementById(selection)); \n//   // Need to add proj list listener\n\n//   // Need to add rest of page listeners\n\n\n\n\n\n//   const toggleMenu = () => {\n//     const navPanel = document.querySelector('nav'); \n//     const menuIcon = document.querySelector('.menu-icon');\n//     const menuToggleTooltip = document.querySelector('#menu-icon-wrapper > .tooltip-text');\n\n//     navPanel.classList.toggle('hidden');\n  \n//     if (navPanel.classList.contains('hidden')) {\n//       menuToggleTooltip.textContent = 'Expand menu';\n//       menuIcon.textContent = 'menu';\n//     } else {\n//       menuToggleTooltip.textContent = 'Collapse menu';\n//       menuIcon.textContent = 'menu_open';\n//     }\n//   }\n\n//   const toggleTheme = () => {\n//     const themeIcon = document.querySelector('.theme-icon');\n//     const themeToggleTooltip = document.querySelector('#theme-icon-wrapper > .tooltip-text');\n\n//     document.body.classList.toggle('dark');\n      \n//     if (document.body.classList.contains('dark')) {\n//       themeToggleTooltip.textContent = 'Light theme'; \n//       themeIcon.textContent = 'brightness_high';\n//     } else {\n//       themeToggleTooltip.textContent = 'Dark theme'; \n//       themeIcon.textContent = 'brightness_4';\n//     }\n//   }\n\n\n//   // Excludes task edit form btns\n//   const managePageBtns = (e) => {\n//     let isProjBtn = e.currentTarget.classList.contains('project-button');\n//     let action = e.currentTarget.id;\n//     let form = isProjBtn \n//       ? document.querySelector('#projects-panel form')\n//       : document.querySelector('main > form');\n  \n//     if (action === 'add-project' || action === 'add-task') {\n//       displayTargetForm(form);\n//       hideExtraneousForms(action);\n//     }\n  \n//     if (action === 'cancel-project' || action === 'cancel-task') {\n//       hideTargetForm(form);\n//     }\n  \n//     if (action === 'submit-project' || action === 'submit-task') {\n//       // setMain or setTasksList?\n\n\n//       display(dataController.initNewItem(action));\n\n\n//       if (action === 'submit-project') {\n//         // Move highlight to own module??\n//         let elem = document.getElementById(dataController.currentNavSelection);\n//         highlight(elem);\n//         listenersController.addNavListsListeners();\n//       } else {\n//         listenersController.addTasksListListener();\n//       }\n\n//       hideTargetForm(form);\n//     }\n//   }\n\n//   const manageNavResponse = (e) => {\n//     const selection = e.target.closest('li');\n//     const addTaskBtn = document.querySelector('main > button');\n//     const mainPanel = document.querySelector('main');\n\n//     // If a home option/proj clicked\n//     if (selection) { \n//       // If click is on a delete icon\n//       if (e.target.classList.contains('delete-icon')) {        \n//         // Remove item, redisplay + add listener to container list\n//         display(dataController.deleteItem(selection.id, dataController.currentProjects))\n//         listenersController.addNavListsListeners();\n\n//         // If deleted item was displayed in main, display 'All' tasks\n//         if (selection.id === mainPanel.dataset.selected) {\n\n//           dataController.currentNavSelection = 'all';\n//           dataController.populateLocalStorage(dataController.currentNavSelection);\n\n//           let selection = dataController.currentNavSelection;\n//           setMainHeader(selection);\n//           // Set dataset here \n//           display(dataController.filterTasks(selection));\n//           addTaskBtn.classList.add('hidden');\n//           // Add task listener here\n//         } \n\n//         highlight(document.getElementById(dataController.currentNavSelection)); \n\n//       } else {\n\n//         dataController.currentNavSelection = selection.id;\n//         dataController.populateLocalStorage(selection.id);\n\n//         // SetMain\n//         mainPanel.dataset.selected = selection.id;\n//         (e.target.closest('ul').id === 'home-list') ? addTaskBtn.classList.add('hidden') : addTaskBtn.classList.remove('hidden');\n//         setMainHeader(selection.id);\n//         display(dataController.filterTasks(selection.id));\n//         listenersController.addTasksListListener();  \n\n//         // Move highlight to own module??\n//         highlight(selection);\n//       }\n//     }\n//   }\n\n//   const manageTaskResponse = (e) => {\n//     let selection = e.target.closest('li');\n//     let mainPanel = document.querySelector('main');\n//     // Move to below; cancel/submit edit\n//     let editForm = document.querySelector('#edit-task-form');\n//     // ^^^^^^^^^\n//     let currentProjects = dataController.currentProjects;\n//     let wrapper, description, checkbox;\n\n  \n//     if (selection) {\n//       wrapper = selection.querySelector('.task-wrapper');\n//       description = selection.querySelector('.task-descr-wrapper');\n//       checkbox = selection.querySelector('.checkbox');\n//     }\n  \n//     for (let i = 0; i < currentProjects.length; i++) {\n//       for (let j = 0; j < currentProjects[i].tasks.length; j++) {\n\n//         if (currentProjects[i].tasks[j].id === selection.id) {\n//           let task = currentProjects[i].tasks[j];\n  \n//           if (e.target.classList.contains('checkbox') || e.target.classList.contains('checked')) {\n  \n//             (task.completed) ? task.completed = false : task.completed = true;\n//             dataController.populateLocalStorage(currentProjects);\n\n//             checkbox.classList.toggle('checked');\n//             selection.classList.toggle('completed');\n//             description.classList.toggle('crossed');\n  \n//           }  \n          \n//           if (e.target.classList.contains('important-icon')) {\n  \n//             (task.important) ? task.important = false : task.important = true; \n//             dataController.populateLocalStorage(currentProjects);\n  \n//             e.target.classList.toggle('important');\n  \n//           } \n          \n//           if (e.target.classList.contains('edit-icon')) {\n//             hideExtraneousForms();\n\n//             selection.append(content.createEditForm(task));\n//             wrapper.classList.toggle('hidden');\n  \n//           } \n          \n//           if (e.target.classList.contains('delete-icon')) {\n//             dataController.currentProjects[i].tasks.splice(j, 1);\n//             dataController.populateLocalStorage(dataController.currentProjects);\n\n//             // let container = dataController.currentProjects[i].tasks\n//             // let itemToDelete = task.id\n//             // deleteItem(itemToDelete, container) unnecessary?????\n//             // display(deleteItem(itemToDelete, container)) works?????\n//             // AddListener\n//             // or just...\n//             // setTasksList()\n\n//             display(dataController.filterTasks(mainPanel.dataset.selected))\n//             listenersController.addTasksListListener();\n//           }\n  \n\n//           if (e.target.id === 'cancel-edit') {\n//             editForm.previousElementSibling.classList.toggle('hidden');\n//             editForm.remove();\n  \n//           } else if (e.target.id === 'submit-edit') {\n//             task.name = document.querySelector('#edit-name-input').value;\n//             task.details = document.querySelector('#edit-details-input').value;\n//             task.due = document.querySelector('#edit-date-input').value;\n//             task.important = document.querySelector('#edit-important-input').checked;\n    \n//             dataController.populateLocalStorage(dataController.currentProjects);\n\n\n//             display(dataController.filterTasks(mainPanel.dataset.selected))\n//             listenersController.addTasksListListener();\n//           }\n  \n//         }\n//       }\n//     }\n//   }\n\n\n//   /* Helper functions: */\n//   // Create item and add to appropriate list\n//   function display (data) {\n//     let oldList, listId, container;\n//     let isProj = (data === dataController.currentProjects);\n  \n//     if (isProj) {\n//       container = document.querySelector('#projects-list-container');\n//       oldList = document.querySelector('#projects-list');\n//       listId = 'projects-list';\n//     } else {\n//       container = document.querySelector('#tasks-list-container');\n//       oldList = document.querySelector('#tasks-list');\n//       listId = 'tasks-list';\n//     }\n  \n//     if (container.contains(oldList)) {\n//       oldList.remove();\n//     }\n  \n//     const newList = document.createElement('ul');\n//     newList.id = listId;\n//     data.forEach(item => { \n//       newList.append(\n//         isProj ? content.createProject(item) : content.createTask(item)\n//       );\n//     })\n  \n//     container.append(newList);\n//   }\n  \n//   // Set main h1 text \n//   function setMainHeader(input) {\n//     const mainHeader = document.querySelector('h1');\n\n//     switch (input) {\n//     case 'all':\n//       mainHeader.textContent = 'All Tasks';\n//       break;\n//     case 'today':\n//       mainHeader.textContent = 'Today';\n//       break;\n//     case 'week':\n//       mainHeader.textContent = 'Next 7 Days';\n//       break;\n//     case 'important':\n//       mainHeader.textContent = 'Important';\n//       break;\n//     default:\n//       dataController.currentProjects.forEach(proj => {\n//         if (proj.id === input) {\n//           mainHeader.textContent = proj.name ? proj.name : 'No name entered';\n//         }\n//       })\n//     }\n//   }\n\n//   // Show correct form (either proj or task)\n//   function displayTargetForm(form) {\n//     // Show selected form\n//     form.classList.remove('hidden');\n//     // Focus on first input box\n//     form.querySelector('input').focus();\n//     // Hide add button\n//     form.nextElementSibling.classList.add('hidden');\n\n//     window.addEventListener('click', hideFormOnClick);\n\n//   }\n\n//   function hideFormOnClick(e) {\n\n//     let isTaskBtn = \n//       e.target.classList.contains('task-button') || \n//       e.target.parentElement.classList.contains('task-button');\n//     let isProjBtn = \n//       e.target.classList.contains('project-button') || \n//       e.target.parentElement.classList.contains('project-button');\n//     let isForm = !!e.target.closest('form');\n//     let displayedForm;\n\n//     let pgForms = document.querySelectorAll('form');\n//     pgForms.forEach(form => {\n//       if (!form.classList.contains('hidden')) {\n//         displayedForm = form;\n//       }\n//     })\n\n//     if (!isTaskBtn && !isProjBtn && !isForm) {\n//       hideTargetForm(displayedForm);\n//     }\n//   }\n\n//   // Hide input form\n//   function hideTargetForm(form) {\n//     // Reset form\n//     form.reset();\n//     // Hide selected form\n//     form.classList.add('hidden');\n//     // Show add button\n//     form.nextElementSibling.classList.remove('hidden');\n\n\n//     window.removeEventListener('click', hideFormOnClick);\n//   }\n\n//   // Hide/remove irrelevant forms \n//   function hideExtraneousForms(action) {\n//     const tasksListContainer = document.querySelector('#tasks-list-container');\n//     let editFormDisplayed = !!tasksListContainer.querySelector('form')\n//     let irrelForm;\n\n//     if (action === 'add-project') {\n//       // Task submission form\n//       irrelForm = document.querySelector('main > form');\n//     } else if (action === 'add-task') {\n//       // Proj submission form\n//       irrelForm = document.querySelector(\"#projects-panel form\");\n//     } else { // action === 'show edit form'\n//       // If create task/proj form not hidden, set = irrelForm\n//       let pgForms = document.querySelectorAll('#projects-panel > form, main > form');\n//       pgForms.forEach(form => {\n//         if (!form.classList.contains('hidden')) {\n//           irrelForm = form;\n\n//         }\n//       })\n\n//     }\n  \n//     if (irrelForm) {\n//       // If create task/proj form displayed, hide\n//       if (!irrelForm.classList.contains('hidden')) {\n//         irrelForm.classList.toggle('hidden');\n//         irrelForm.nextElementSibling.classList.toggle('hidden');\n//         window.removeEventListener('click', hideFormOnClick);\n//       }\n//     }\n  \n//     // If edit task form displayed, hide\n//     if (editFormDisplayed) {\n//       let editForm = tasksListContainer.querySelector('form');\n  \n//       editForm.previousElementSibling.classList.toggle('hidden');\n//       editForm.remove();\n//     }\n//   }\n\n\n//   return {\n//     toggleMenu, \n//     toggleTheme,\n//     managePageBtns,\n//     manageNavResponse,\n//     manageTaskResponse\n//   }\n// })();\n\n// const listenersController = (() => {\n\n//   const addMenuToggListener = () => {\n//     const menuToggle = document.querySelector('.menu-icon');\n\n//     menuToggle.addEventListener('click', displayController.toggleMenu);\n//   }\n\n//   const addThemeToggListener = () => {\n//     const themeToggle = document.querySelector('.theme-icon');\n\n//     themeToggle.addEventListener('click', displayController.toggleTheme);\n//   }\n\n//   const addNavListsListeners = () => {\n//     // In lieu of adding listener to list items, add to lists\n//     // May be more efficient?\n//     let navLists = document.querySelectorAll('nav ul');\n\n//     navLists.forEach(list => {\n//       list.addEventListener('click', displayController.manageNavResponse)\n//     })\n//   }\n\n//   const addTasksListListener = () => {\n//   const tasksList = document.querySelector('#tasks-list');\n\n//     if (tasksList) {\n//       tasksList.addEventListener('click', displayController.manageTaskResponse)\n//     }\n//   }\n\n//   const addPageBtnListeners = () => {\n//     const formBtns = document.querySelectorAll('button');\n  \n//     formBtns.forEach(btn => {\n//       btn.addEventListener('click', displayController.managePageBtns);\n//     })\n//   }\n\n\n\n\n//   // addMenuToggListener();\n//   addThemeToggListener();\n//   // Only on task views on start\n//   addNavListsListeners(); \n//   addTasksListListener();\n//   addPageBtnListeners();\n\n//   return {\n//     addMenuToggListener,\n//     addThemeToggListener,\n//     addNavListsListeners,\n//     addTasksListListener,\n//     addPageBtnListeners\n//   }\n// })();\n\n\n\n//# sourceURL=webpack://todo-list/./src/index.js?");

/***/ }),

/***/ "./src/modules/content-fns.js":
/*!************************************!*\
  !*** ./src/modules/content-fns.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createEditForm\": () => (/* binding */ createEditForm),\n/* harmony export */   \"createProj\": () => (/* binding */ createProj),\n/* harmony export */   \"createTask\": () => (/* binding */ createTask)\n/* harmony export */ });\n// This module contains functions that create the dynamic page content \n\nconst createProj = (obj) => {\n  const projectListItem = document.createElement('li');\n  const projectWrapper = document.createElement('div');\n  const projectIcon = document.createElement('span');\n  const projectTitle = document.createElement('h3');\n  const deleteIcon = document.createElement('span');\n  \n  projectListItem.classList.add('project-item');\n  projectListItem.id = obj.id;\n  projectWrapper.classList.add('project-wrapper');\n  projectIcon.classList.add('material-symbols-rounded', 'decor-icon');\n  projectIcon.textContent = 'tools_power_drill';\n  projectTitle.textContent = obj.name ? obj.name : 'No name entered';\n  deleteIcon.classList.add('material-symbols-rounded', 'delete-icon');\n  deleteIcon.textContent = 'delete';\n\n  projectWrapper.append(projectIcon, projectTitle, deleteIcon);\n  projectListItem.append(projectWrapper);\n  return projectListItem;\n};\n\nconst createTask = (obj) => {\n  const taskListItem = document.createElement('li');\n  const taskWrapper = document.createElement('div');\n  const taskSubWrapper = document.createElement('div');\n  const checkbox = document.createElement('div');\n  const taskDescrWrapper = document.createElement('div');\n  const taskName = document.createElement('h3');\n  const taskDetails = document.createElement('p');  \n  const taskEditWrapper = document.createElement('div');\n  const taskDueDate = document.createElement('span');\n  const taskImportantIcon = document.createElement('span');\n  const editIcon = document.createElement('span');\n\n  taskListItem.classList.add('task-item');\n  taskListItem.id = obj.id;\n  taskWrapper.classList.add('task-wrapper');\n  taskSubWrapper.classList.add('task-sub-wrapper');\n  checkbox.classList.add('checkbox');\n  taskDescrWrapper.classList.add('task-descr-wrapper');\n  taskName.textContent = obj.name ? obj.name : 'No name entered';\n  taskDetails.textContent = obj.details;\n  taskEditWrapper.classList.add('task-edit-wrapper');\n  taskDueDate.classList.add('task-due-date');\n  taskImportantIcon.classList.add('material-symbols-rounded', 'important-icon');\n  taskImportantIcon.textContent = 'flag';\n  editIcon.classList.add('material-symbols-rounded', 'edit-icon');\n  editIcon.textContent = 'more_vert';\n  \n  if (obj.completed) {\n    checkbox.classList.add('checked');\n    taskListItem.classList.add('completed');\n    taskDescrWrapper.classList.add('crossed');\n  }\n  if (obj.due) {\n    taskDueDate.textContent = taskObj.due;\n  } else {\n    taskDueDate.textContent = 'No due date';\n  }\n  if (obj.important) {\n    taskImportantIcon.classList.add('important');\n  }\n\n  taskEditWrapper.append(taskDueDate, taskImportantIcon, editIcon);\n  taskDescrWrapper.append(taskName, taskDetails);\n  taskSubWrapper.append(checkbox, taskDescrWrapper);\n  taskWrapper.append(taskSubWrapper, taskEditWrapper);\n  taskListItem.append(taskWrapper);\n  return taskListItem;\n}\n\nconst createEditForm = (obj) => {\n  const form = document.createElement(\"form\");\n  const nameLabel = document.createElement(\"label\");\n  const nameInput = document.createElement(\"input\");\n  const detailsLabel = document.createElement(\"label\");\n  const detailsInput = document.createElement(\"textarea\");\n  const dateLabel = document.createElement(\"label\");\n  const dateInput = document.createElement(\"input\");\n  const formSubContainer = document.createElement('div');\n  const importantLabel = document.createElement(\"label\");\n  const importantInput = document.createElement(\"input\");\n  const deleteWrapper = document.createElement('div');\n  const deleteIcon = document.createElement('span');\n  const btnContainer = document.createElement(\"div\");\n  const submitBtn = document.createElement(\"button\");\n  const cancelBtn = document.createElement(\"button\");\n\n  form.id = 'edit-task-form';\n  nameLabel.htmlFor = \"edit-name-input\";\n  nameLabel.textContent = \"Task name:\";\n  nameInput.id = \"edit-name-input\";\n  nameInput.type = \"text\";\n  nameInput.placeholder = \"E.g., Get dinner\";\n  detailsLabel.htmlFor = \"edit-details-input\";\n  detailsLabel.textContent = \"Details:\";\n  detailsInput.id = \"edit-details-input\";\n  detailsInput.rows = \"5\";\n  detailsInput.cols = \"30\";\n  detailsInput.wrap = \"hard\";\n  detailsInput.placeholder = \"E.g., Taco Bell\";\n  dateLabel.htmlFor = \"edit-date-input\";\n  dateLabel.textContent = \"Date due:\";\n  dateInput.id = \"edit-date-input\";\n  dateInput.type = \"Date\";\n  importantLabel.htmlFor = \"edit-important-input\";\n  importantLabel.textContent = \"Important:\";\n  importantInput.id = \"edit-important-input\";\n  importantInput.type = \"checkbox\";\n  deleteWrapper.textContent = 'Delete:';\n  deleteWrapper.classList.add('delete-wrapper');\n  deleteIcon.classList.add('material-symbols-rounded', 'delete-icon');\n  deleteIcon.textContent = 'delete';\n  submitBtn.classList.add(\"edit-button\");\n  submitBtn.id = \"submit-edit\";\n  submitBtn.textContent = \"Submit\";\n  submitBtn.type = \"button\";\n  cancelBtn.classList.add(\"edit-button\");\n  cancelBtn.id = \"cancel-edit\";\n  cancelBtn.textContent = \"Cancel\";\n  cancelBtn.type = \"button\";\n\n  nameInput.value = obj.name;\n  detailsInput.value = obj.details;\n  dateInput.value = obj.due;\n  importantInput.checked = obj.important;\n\n  importantLabel.append(importantInput);\n  deleteWrapper.append(deleteIcon);\n  formSubContainer.append(importantLabel, deleteWrapper);\n  btnContainer.append(submitBtn, cancelBtn);\n  form.append(\n    nameLabel,\n    nameInput,\n    detailsLabel,\n    detailsInput,\n    dateLabel,\n    dateInput,\n    formSubContainer,\n    btnContainer\n  );\n  return form;\n};\n\n\n\n//# sourceURL=webpack://todo-list/./src/modules/content-fns.js?");

/***/ }),

/***/ "./src/modules/data-fns.js":
/*!*********************************!*\
  !*** ./src/modules/data-fns.js ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"createProj\": () => (/* binding */ createProj),\n/* harmony export */   \"createTask\": () => (/* binding */ createTask),\n/* harmony export */   \"deleteItem\": () => (/* binding */ deleteItem),\n/* harmony export */   \"filterTasks\": () => (/* binding */ filterTasks),\n/* harmony export */   \"initItem\": () => (/* binding */ initItem),\n/* harmony export */   \"popLocalStorage\": () => (/* binding */ popLocalStorage),\n/* harmony export */   \"saveNavSelection\": () => (/* binding */ saveNavSelection)\n/* harmony export */ });\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isToday/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/parseISO/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/isThisWeek/index.js\");\n/* harmony import */ var date_fns__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! date-fns */ \"./node_modules/date-fns/esm/getDay/index.js\");\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/modules/data.js\");\n/* This module's functions create/control/manipulate the data, e.g., deleting/adding items from projects array, saving to local storage, etc.. */\n\n\n\n\n/* Helper functions used in exported fns */\nconst add = (obj, arr) => {\n  arr.push(obj);\n}\n\nconst remove = (objId, arr) => {\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i].id === objId) {\n      arr.splice(i, 1);\n    }\n  }\n}\n\nconst setId = (prefix, arr) => {\n  for (let i = 0; i < arr.length; i++) {\n    arr[i].id = prefix + i;\n  }\n}\n\n/* Constructors to create new projects/tasks */\nfunction Project(name) {\n  this.name = name;\n  this.tasks = [];\n}\n\nfunction Task(name, details, due, important) {\n  this.name = name;\n  this.details = details;\n  this.due = due;\n  this.important = important;\n  this.completed = false;\n}\n\n\n/* Exported fns */\nconst createProj = () => {\n  const projName = document.querySelector(\"#project-name-input\").value;\n  return new Project(projName);\n}\n\nconst createTask = () => {\n  const taskName = document.querySelector('#task-name-input').value;\n  const taskDetails = document.querySelector('#task-details-input').value;\n  const taskDue = document.querySelector('#task-date-input').value;\n  const taskImportant = document.querySelector('#task-important-input').checked;\n  return new Task(taskName, taskDetails, taskDue, taskImportant);\n}\n\n// Set up a new item -\n// Add item to container array, \n// set id of items in array, \n// save projects array to local storage, \n// return container for display\nconst initItem = (item) => {\n  let container, idPrefix;\n\n  if (item instanceof Project) {\n    container = _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects;\n    idPrefix = 'project-'\n  } else {\n    let targetProj = document.querySelector('main').dataset.selected;\n    _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n      if (proj.id === targetProj) {\n        container = proj.tasks;\n        idPrefix = `${proj.id}-task-`;\n      }\n    })\n  }\n\n  add(item, container);\n  setId(idPrefix, container);\n  popLocalStorage(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects);\n  return container;\n}\n\n// const initNewItem = (input) => {\n//   let item, container, idPrefix;\n\n//   if (input === 'submit-project') {\n//     const projName = document.querySelector(\"#project-name-input\").value;\n//     item = new Project(projName);\n\n//     container = data.projects;\n//     idPrefix = 'project-'\n//   } else if (input === 'submit-task') {\n//     const taskName = document.querySelector('#task-name-input').value;\n//     const taskDetails = document.querySelector('#task-details-input').value;\n//     const taskDue = document.querySelector('#task-date-input').value;\n//     const taskImportant = document.querySelector('#task-important-input').checked;\n//     item = new Task(taskName, taskDetails, taskDue, taskImportant);\n\n//     let selectedProject = document.querySelector('main').dataset.selected;\n//     data.projects.forEach(proj => {\n//       if (proj.id === selectedProject) {\n//         container = proj.tasks;\n//         idPrefix = `${proj.id}-task-`;\n//       }\n//     })\n//   }\n\n//   add(item, container);\n//   setId(idPrefix, container);\n//   popLocalStorage(data.projects);\n//   return container;\n// }\n\n// Delete proj/task - \n// Remove item from container array,\n// Save projects array to local storage\n// return container for display\nconst deleteItem = (objId) => {\n  let isTask = /task/.test(objId);\n  let container;\n\n  if (isTask) {\n    // for (let i = 0; i < projects.length; i++) {\n    //   for (let j = 0; j < projects[i].tasks.length; j++) {\n    //     if (projects[i].tasks[j].id === objId) {\n    //       container = projects[i].tasks;\n    //     }\n    //   }\n    // }\n\n    _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n      proj.tasks.forEach(task => {\n        if (task.id === objId) {\n          container = proj.tasks;\n        }\n      })\n    })\n\n  } else {\n    container = _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects;\n  }\n\n  remove(objId, container);\n  popLocalStorage(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects);\n  return container;\n}\n\n// Returns selected tasks based on criteria\nconst filterTasks = (filter) => {\n  let filteredTasks = [];\n\n  switch (filter) {\n    case 'all':\n      _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n        proj.tasks.forEach(task => {\n          filteredTasks.push(task);\n        });\n      });\n      break;\n    case 'today':\n      _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n        proj.tasks.forEach(task => {\n          if ((0,date_fns__WEBPACK_IMPORTED_MODULE_1__[\"default\"])((0,date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(task.due))) {\n            filteredTasks.push(task);\n          }\n        });\n      });\n      break;\n    case 'week':\n      _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n        proj.tasks.forEach(task => {\n          if (task.due) {\n            if ((0,date_fns__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((0,date_fns__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(task.due), {weekStartsOn: (0,date_fns__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(new Date())})) {\n              filteredTasks.push(task);\n            }\n          }\n        });\n      });\n      break;\n    case 'important':\n      _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n        proj.tasks.forEach(task => {\n          if (task.important) {\n            filteredTasks.push(task);\n          }\n        });\n      });\n      break;\n    default:\n      _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n        if (proj.id === filter) {\n          filteredTasks = proj.tasks;\n        }\n      })\n  }\n\n  return filteredTasks;\n}\n\n// Save projects or nav selection to local storage\nconst popLocalStorage = (input) => {\n\n  if (typeof input === 'object') {\n    localStorage.setItem('projects', JSON.stringify(input));\n  } else {\n    localStorage.setItem('display', input);\n  }\n  \n};\n\n// Save user nav panel selection\nconst saveNavSelection = (input) => {\n  _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navSelection = input;\n  popLocalStorage(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navSelection);\n}\n\n\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/modules/data-fns.js?");

/***/ }),

/***/ "./src/modules/data.js":
/*!*****************************!*\
  !*** ./src/modules/data.js ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* This module acts as the database for the application */\n\n// Wrap in IIFE to be able to reassign the variables\n// Without it, get a no setter error \nconst data = (() => {\n  // Defines user current projects\n  let projects = !JSON.parse(localStorage.getItem('projects')) \n    ? [] \n    : JSON.parse(localStorage.getItem('projects'));\n\n  // Defines nav panel selection displayed in main panel\n  let navSelection = !localStorage.getItem('display')\n    ? 'all' \n    : localStorage.getItem('display'); \n\n  return {\n    projects,\n    navSelection\n  }\n})();\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (data);\n\n\n\n\n\n\n\n\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/modules/data.js?");

/***/ }),

/***/ "./src/modules/display-fns.js":
/*!************************************!*\
  !*** ./src/modules/display-fns.js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"hlNavSelection\": () => (/* binding */ hlNavSelection),\n/* harmony export */   \"manageNavResponse\": () => (/* binding */ manageNavResponse),\n/* harmony export */   \"managePageBtns\": () => (/* binding */ managePageBtns),\n/* harmony export */   \"manageTaskResponse\": () => (/* binding */ manageTaskResponse),\n/* harmony export */   \"setMainPanel\": () => (/* binding */ setMainPanel),\n/* harmony export */   \"setProjPanel\": () => (/* binding */ setProjPanel),\n/* harmony export */   \"toggleMenu\": () => (/* binding */ toggleMenu),\n/* harmony export */   \"toggleTheme\": () => (/* binding */ toggleTheme)\n/* harmony export */ });\n/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./data.js */ \"./src/modules/data.js\");\n/* harmony import */ var _content_fns_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./content-fns.js */ \"./src/modules/content-fns.js\");\n/* harmony import */ var _listener_fns__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./listener-fns */ \"./src/modules/listener-fns.js\");\n/* harmony import */ var _data_fns__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./data-fns */ \"./src/modules/data-fns.js\");\n\n\n\n\n\n\n\n\nconst setTasksList = (arr) => {\n  display(arr);\n  _listener_fns__WEBPACK_IMPORTED_MODULE_2__.addTasksListListener('click', manageTaskResponse);\n}\nfunction displayTargetForm(form) {\n  // Show selected form\n  form.classList.remove('hidden');\n  // Focus on first input box\n  form.querySelector('input').focus();\n  // Hide add button\n  form.nextElementSibling.classList.add('hidden');\n\n  // window.addEventListener('click', hideFormOnClick);\n  _listener_fns__WEBPACK_IMPORTED_MODULE_2__.docListener('add', 'click', hideFormOnClick);\n}\nfunction hideFormOnClick(e) {\n  let isTaskBtn =\n    e.target.classList.contains('task-button') ||\n    e.target.parentElement.classList.contains('task-button');\n  let isProjBtn =\n    e.target.classList.contains('project-button') ||\n    e.target.parentElement.classList.contains('project-button');\n  let isForm = !!e.target.closest('form');\n  let displayedForm;\n\n  let pgForms = document.querySelectorAll('form');\n  pgForms.forEach(form => {\n    if (!form.classList.contains('hidden')) {\n      displayedForm = form;\n    }\n  })\n\n  if (!isTaskBtn && !isProjBtn && !isForm) {\n    hideTargetForm(displayedForm);\n  }\n}\nfunction hideTargetForm(form) {\n  // Reset form\n  form.reset();\n  // Hide selected form\n  form.classList.add('hidden');\n  // Show add button\n  form.nextElementSibling.classList.remove('hidden');\n\n  // window.removeEventListener('click', hideFormOnClick);\n  _listener_fns__WEBPACK_IMPORTED_MODULE_2__.docListener('remove', 'click', hideFormOnClick);\n}\nfunction hideExtraneousForms(action) {\n  const tasksListContainer = document.querySelector('#tasks-list-container');\n  let editFormDisplayed = !!tasksListContainer.querySelector('form')\n  let irrelForm;\n\n  if (action === 'add-project') {\n    // Task submission form\n    irrelForm = document.querySelector('main > form');\n  } else if (action === 'add-task') {\n    // Proj submission form\n    irrelForm = document.querySelector(\"#projects-panel form\");\n  } else { // action === 'show edit form'\n    // If create task/proj form not hidden, set = irrelForm\n    let pgForms = document.querySelectorAll('#projects-panel > form, main > form');\n    pgForms.forEach(form => {\n      if (!form.classList.contains('hidden')) {\n        irrelForm = form;\n      }\n    })\n  }\n\n  if (irrelForm) {\n    // If create task/proj form displayed, hide\n    if (!irrelForm.classList.contains('hidden')) {\n      irrelForm.classList.toggle('hidden');\n      irrelForm.nextElementSibling.classList.toggle('hidden');\n      // window.removeEventListener('click', hideFormOnClick);\n      _listener_fns__WEBPACK_IMPORTED_MODULE_2__.docListener('remove', 'click', hideFormOnClick);\n    }\n  }\n\n  // If edit task form displayed, hide\n  if (editFormDisplayed) {\n    let editForm = tasksListContainer.querySelector('form');\n\n    editForm.previousElementSibling.classList.toggle('hidden');\n    editForm.remove();\n  }\n}\nfunction display(arr) {\n  let oldList, listId, container;\n  let isProj = (arr === _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects);\n\n  if (isProj) {\n    container = document.querySelector('#projects-list-container');\n    oldList = document.querySelector('#projects-list');\n    listId = 'projects-list';\n  } else {\n    container = document.querySelector('#tasks-list-container');\n    oldList = document.querySelector('#tasks-list');\n    listId = 'tasks-list';\n  }\n\n  if (container.contains(oldList)) {\n    oldList.remove();\n  }\n\n  const newList = document.createElement('ul');\n  newList.id = listId;\n  arr.forEach(item => {\n    newList.append(\n      isProj ? _content_fns_js__WEBPACK_IMPORTED_MODULE_1__.createProj(item) : _content_fns_js__WEBPACK_IMPORTED_MODULE_1__.createTask(item)\n    );\n  })\n  container.append(newList);\n  \n  return isProj;\n}\n\n\n\n\nconst setMainPanel = () => {\n  const mainPanel = document.querySelector('main');\n  const mainHeader = document.querySelector('h1');\n  const addTaskBtn = document.querySelector('main > button');\n  let input = _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navSelection\n\n  // Set selected data on main\n  mainPanel.dataset.selected = input;\n\n  // Set header\n  switch (input) {\n    case 'all':\n      mainHeader.textContent = 'All Tasks';\n      break;\n    case 'today':\n      mainHeader.textContent = 'Today';\n      break;\n    case 'week':\n      mainHeader.textContent = 'Next 7 Days';\n      break;\n    case 'important':\n      mainHeader.textContent = 'Important';\n      break;\n    default:\n      _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects.forEach(proj => {\n        if (proj.id === input) {\n          mainHeader.textContent = proj.name ? proj.name : 'No name entered';\n        }\n      })\n  }\n\n  // Control add task btn\n  switch (input) {\n    case 'all':\n    case 'today':\n    case 'week':\n    case 'important':\n      addTaskBtn.classList.add('hidden');\n      break;\n    default:\n      addTaskBtn.classList.remove('hidden');\n  }\n\n  setTasksList(_data_fns__WEBPACK_IMPORTED_MODULE_3__.filterTasks(input));\n}\n\nconst setProjPanel = (arr) => {\n  display(arr);\n  _listener_fns__WEBPACK_IMPORTED_MODULE_2__.addNavListListeners('click', manageNavResponse);\n}\n\nconst hlNavSelection = () => {\n  const navItems = document.querySelectorAll('nav li');\n  navItems.forEach(item => {\n    if (item.classList.contains('highlight') && item.id !== _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navSelection) {\n      item.classList.remove('highlight');\n    }\n  });\n\n  document.getElementById(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].navSelection).classList.add('highlight');\n}\n\nconst toggleMenu = () => {\n  const navPanel = document.querySelector('nav');\n  const menuIcon = document.querySelector('.menu-icon');\n  const menuToggleTooltip = document.querySelector('#menu-icon-wrapper > .tooltip-text');\n\n  navPanel.classList.toggle('hidden');\n\n  if (navPanel.classList.contains('hidden')) {\n    menuToggleTooltip.textContent = 'Expand menu';\n    menuIcon.textContent = 'menu';\n  } else {\n    menuToggleTooltip.textContent = 'Collapse menu';\n    menuIcon.textContent = 'menu_open';\n  }\n}\n\nconst toggleTheme = () => {\n  const themeIcon = document.querySelector('.theme-icon');\n  const themeToggleTooltip = document.querySelector('#theme-icon-wrapper > .tooltip-text');\n\n  document.body.classList.toggle('dark');\n\n  if (document.body.classList.contains('dark')) {\n    themeToggleTooltip.textContent = 'Light theme';\n    themeIcon.textContent = 'brightness_high';\n  } else {\n    themeToggleTooltip.textContent = 'Dark theme';\n    themeIcon.textContent = 'brightness_4';\n  }\n}\n\nconst managePageBtns = (e) => {\n  let isProjBtn = e.currentTarget.classList.contains('project-button');\n  let action = e.currentTarget.id;\n  let form = isProjBtn\n    ? document.querySelector('#projects-panel form')\n    : document.querySelector('main > form');\n\n  if (action === 'add-project' || action === 'add-task') {\n    displayTargetForm(form);\n    hideExtraneousForms(action);\n  } else {\n\n    if (action === 'submit-project') {\n      let newProj = _data_fns__WEBPACK_IMPORTED_MODULE_3__.createProj();\n      setProjPanel(_data_fns__WEBPACK_IMPORTED_MODULE_3__.initItem(newProj));\n      hlNavSelection();\n    } else if (action === 'submit-task') {\n      let newTask = _data_fns__WEBPACK_IMPORTED_MODULE_3__.createTask();\n      setTasksList(_data_fns__WEBPACK_IMPORTED_MODULE_3__.initItem(newTask));\n    }\n\n    hideTargetForm(form);\n  }\n}\n// const managePageBtns = (e) => {\n//   let isProjBtn = e.currentTarget.classList.contains('project-button');\n//   let action = e.currentTarget.id;\n//   let form = isProjBtn\n//     ? document.querySelector('#projects-panel form')\n//     : document.querySelector('main > form');\n\n//   if (action === 'add-project' || action === 'add-task') {\n//     displayTargetForm(form);\n//     hideExtraneousForms(action);\n//   } else {\n\n//     if (action === 'submit-project') {\n//       setProjPanel(dataFns.initNewItem(action));\n//       hlNavSelection();\n//     } else if (action === 'submit-task') {\n//       setTasksList(dataFns.initNewItem(action));\n//     }\n\n//     hideTargetForm(form);\n//   }\n// }\n\nconst manageNavResponse = (e) => {\n  const selection = e.target.closest('li');\n  const mainPanel = document.querySelector('main');\n\n  if (selection) {\n    if (e.target.classList.contains('delete-icon')) {\n      setProjPanel(_data_fns__WEBPACK_IMPORTED_MODULE_3__.deleteItem(selection.id, _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects));\n\n      if (selection.id === mainPanel.dataset.selected) {\n        _data_fns__WEBPACK_IMPORTED_MODULE_3__.saveNavSelection('all');\n        setMainPanel();\n      }\n\n      hlNavSelection();\n    } else {\n      _data_fns__WEBPACK_IMPORTED_MODULE_3__.saveNavSelection(selection.id);\n      setMainPanel();\n      hlNavSelection();\n    }\n  }\n}\n\nconst manageTaskResponse = (e) => {\n  let selection = e.target.closest('li');\n  let mainPanel = document.querySelector('main');\n  let editForm = document.querySelector('#edit-task-form');\n  let projects = _data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects;\n  let wrapper, description, checkbox;\n\n\n\n  if (selection) {\n    wrapper = selection.querySelector('.task-wrapper');\n    description = selection.querySelector('.task-descr-wrapper');\n    checkbox = selection.querySelector('.checkbox');\n  }\n\n  console.log(_data_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"].projects);\n  console.log(selection.id)\n\n\n  projects.forEach(proj => {\n    proj.tasks.forEach(task => {\n      if (task.id === selection.id) {\n        if (\n          e.target.classList.contains('checkbox') || \n          e.target.classList.contains('checked')\n        ) {\n          task.completed ? (task.completed = false) : (task.completed = true);\n          _data_fns__WEBPACK_IMPORTED_MODULE_3__.popLocalStorage(projects);\n\n          checkbox.classList.toggle('checked');\n          selection.classList.toggle('completed');\n          description.classList.toggle('crossed');\n        }\n\n        if (e.target.classList.contains('important-icon')) {\n          task.important ? (task.important = false) : (task.important = true);\n          _data_fns__WEBPACK_IMPORTED_MODULE_3__.popLocalStorage(projects);\n\n          e.target.classList.toggle('important');\n        }\n\n        if (e.target.classList.contains('edit-icon')) {\n          hideExtraneousForms();\n          selection.append(_content_fns_js__WEBPACK_IMPORTED_MODULE_1__.createEditForm(task));\n          wrapper.classList.toggle('hidden');\n        }\n\n        if (e.target.classList.contains('delete-icon')) {\n          setTasksList(_data_fns__WEBPACK_IMPORTED_MODULE_3__.deleteItem(task.id, proj.tasks))\n        }\n\n\n        if (e.target.id === 'cancel-edit') {\n          editForm.previousElementSibling.classList.toggle('hidden');\n          editForm.remove();\n        } else if (e.target.id === 'submit-edit') {\n          task.name = document.querySelector('#edit-name-input').value;\n          task.details = document.querySelector('#edit-details-input').value;\n          task.due = document.querySelector('#edit-date-input').value;\n          task.important = document.querySelector('#edit-important-input').checked;\n          _data_fns__WEBPACK_IMPORTED_MODULE_3__.popLocalStorage(projects);\n\n          setTasksList(_data_fns__WEBPACK_IMPORTED_MODULE_3__.filterTasks(mainPanel.dataset.selected));\n        }\n      }\n    })\n  })\n}\n\n\n\n\n// const managePageBtns = (e) => {\n//   let isProjBtn = e.currentTarget.classList.contains('project-button');\n//   let action = e.currentTarget.id;\n//   let form = isProjBtn\n//     ? document.querySelector('#projects-panel form')\n//     : document.querySelector('main > form');\n\n//   if (action === 'add-project' || action === 'add-task') {\n//     displayTargetForm(form);\n//     hideExtraneousForms(action);\n//   }\n\n//   if (action === 'cancel-project' || action === 'cancel-task') {\n//     hideTargetForm(form);\n//   }\n\n//   if (action === 'submit-project' || action === 'submit-task') {\n//     // setMain or setTasksList?\n\n\n//     display(data.initNewItem(action));\n\n\n//     if (action === 'submit-project') {\n//       highlight(data.navSelection);\n//       listenersController.addNavListsListeners();\n\n//     } else {\n//       listenersController.addTasksListListener();\n//     }\n\n//     hideTargetForm(form);\n//   }\n// }\n\n// const manageNavResponse = (e) => {\n//   const selection = e.target.closest('li');\n//   const mainPanel = document.querySelector('main');\n\n//   // If a home option/proj clicked\n//   if (selection) {\n//     // If click is on a delete icon\n//     if (e.target.classList.contains('delete-icon')) {\n\n//       display(dataFns.deleteItem(selection.id, data.projects))\n//       listenerFns.addNavListListeners('click', manageNavResponse);\n\n//       // If deleted item was displayed in main, display 'All' tasks\n//       if (selection.id === mainPanel.dataset.selected) {\n\n//         data.navSelection = 'all';\n//         dataFns.popLocalStorage(data.navSelection);\n\n//         setMainPanel(data.navSelection);\n\n//         // display(data.filterTasks(selection));\n//         // Add task listener here\n//       }\n\n//       highlight(data.navSelection);\n\n//     } else {\n\n//       data.navSelection = selection.id;\n//       dataFns.popLocalStorage(data.navSelection);\n\n//       setMainPanel(selection.id);\n\n//       // display(dataFns.filterTasks(selection.id));\n//       // listenerFns.addTasksListListener('click', manageTaskResponse);\n\n//       // Move highlight to own module??\n//       highlight(selection.id);\n//     }\n//   }\n// }\n\n// const manageTaskResponse = (e) => {\n//   let selection = e.target.closest('li');\n//   let mainPanel = document.querySelector('main');\n//   let currentProjects = data.projects;\n//   let wrapper, description, checkbox;\n\n//   // Move to below; cancel/submit edit\n//   let editForm = document.querySelector('#edit-task-form');\n\n\n\n//   if (selection) {\n//     wrapper = selection.querySelector('.task-wrapper');\n//     description = selection.querySelector('.task-descr-wrapper');\n//     checkbox = selection.querySelector('.checkbox');\n//   }\n\n//   for (let i = 0; i < currentProjects.length; i++) {\n//     for (let j = 0; j < currentProjects[i].tasks.length; j++) {\n\n//       if (currentProjects[i].tasks[j].id === selection.id) {\n//         let task = currentProjects[i].tasks[j];\n\n//         if (e.target.classList.contains('checkbox') || e.target.classList.contains('checked')) {\n\n//           (task.completed) ? task.completed = false : task.completed = true;\n//           data.popLocalStorage(currentProjects);\n\n//           checkbox.classList.toggle('checked');\n//           selection.classList.toggle('completed');\n//           description.classList.toggle('crossed');\n\n//         }\n\n//         if (e.target.classList.contains('important-icon')) {\n\n//           (task.important) ? task.important = false : task.important = true;\n//           dataController.populateLocalStorage(currentProjects);\n\n//           e.target.classList.toggle('important');\n\n//         }\n\n//         if (e.target.classList.contains('edit-icon')) {\n//           hideExtraneousForms();\n\n//           selection.append(content.createEditForm(task));\n//           wrapper.classList.toggle('hidden');\n\n//         }\n\n//         if (e.target.classList.contains('delete-icon')) {\n//           data.projects[i].tasks.splice(j, 1);\n//           data.popLocalStorage(currentProjects);\n\n\n//           // let container = data.projects[i].tasks\n//           // let itemToDelete = task.id\n//           // deleteItem(itemToDelete, container) unnecessary?????\n//           // display(deleteItem(itemToDelete, container)) works?????\n//           // AddListener\n//           // or just...\n//           // setTasksList()\n\n//           display(dataFns.filterTasks(mainPanel.dataset.selected))\n//           listenerFns.addTasksListListener('click', manageTaskResponse);\n//         }\n\n\n//         if (e.target.id === 'cancel-edit') {\n//           editForm.previousElementSibling.classList.toggle('hidden');\n//           editForm.remove();\n\n//         } else if (e.target.id === 'submit-edit') {\n//           task.name = document.querySelector('#edit-name-input').value;\n//           task.details = document.querySelector('#edit-details-input').value;\n//           task.due = document.querySelector('#edit-date-input').value;\n//           task.important = document.querySelector('#edit-important-input').checked;\n\n//           data.popLocalStorage(currentProjects);\n\n\n\n//           display(data.filterTasks(mainPanel.dataset.selected))\n//           listenerFns.addTasksListListener('click', manageTaskResponse);\n//         }\n\n//       }\n//     }\n//   }\n// }\n\n// const manageTaskResponse = (e) => {\n//   let selection = e.target.closest('li');\n//   let mainPanel = document.querySelector('main');\n//   let currentProjects = data.projects;\n//   let wrapper, description, checkbox;\n\n//   // Move to below; cancel/submit edit\n//   let editForm = document.querySelector('#edit-task-form');\n\n\n\n//   if (selection) {\n//     wrapper = selection.querySelector('.task-wrapper');\n//     description = selection.querySelector('.task-descr-wrapper');\n//     checkbox = selection.querySelector('.checkbox');\n//   }\n\n//   for (let i = 0; i < currentProjects.length; i++) {\n//     for (let j = 0; j < currentProjects[i].tasks.length; j++) {\n\n//       if (currentProjects[i].tasks[j].id === selection.id) {\n//         let task = currentProjects[i].tasks[j];\n\n//         if (e.target.classList.contains('checkbox') || e.target.classList.contains('checked')) {\n\n//           (task.completed) ? task.completed = false : task.completed = true;\n//           dataFns.popLocalStorage(currentProjects);\n\n//           checkbox.classList.toggle('checked');\n//           selection.classList.toggle('completed');\n//           description.classList.toggle('crossed');\n\n//         }\n\n//         if (e.target.classList.contains('important-icon')) {\n\n//           (task.important) ? task.important = false : task.important = true;\n//           dataFns.popLocalStorage(currentProjects);\n\n//           e.target.classList.toggle('important');\n\n//         }\n\n//         if (e.target.classList.contains('edit-icon')) {\n//           hideExtraneousForms();\n\n//           selection.append(content.createEditForm(task));\n//           wrapper.classList.toggle('hidden');\n\n//         }\n\n//         if (e.target.classList.contains('delete-icon')) {\n//           data.projects[i].tasks.splice(j, 1);\n//           dataFns.popLocalStorage(currentProjects);\n\n\n//           // let container = data.projects[i].tasks\n//           // let itemToDelete = task.id\n//           // deleteItem(itemToDelete, container) unnecessary?????\n//           // display(deleteItem(itemToDelete, container)) works?????\n//           // AddListener\n//           // or just...\n//           // setTasksList()\n\n//           display(dataFns.filterTasks(mainPanel.dataset.selected))\n//           listenerFns.addTasksListListener('click', manageTaskResponse);\n//         }\n\n\n//         if (e.target.id === 'cancel-edit') {\n//           editForm.previousElementSibling.classList.toggle('hidden');\n//           editForm.remove();\n\n//         } else if (e.target.id === 'submit-edit') {\n//           task.name = document.querySelector('#edit-name-input').value;\n//           task.details = document.querySelector('#edit-details-input').value;\n//           task.due = document.querySelector('#edit-date-input').value;\n//           task.important = document.querySelector('#edit-important-input').checked;\n\n//           data.popLocalStorage(currentProjects);\n\n\n\n//           display(dataFns.filterTasks(mainPanel.dataset.selected))\n//           listenerFns.addTasksListListener('click', manageTaskResponse);\n//         }\n\n//       }\n//     }\n//   }\n// }\n\n\n//# sourceURL=webpack://todo-list/./src/modules/display-fns.js?");

/***/ }),

/***/ "./src/modules/listener-fns.js":
/*!*************************************!*\
  !*** ./src/modules/listener-fns.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"addMenuToggListener\": () => (/* binding */ addMenuToggListener),\n/* harmony export */   \"addNavListListeners\": () => (/* binding */ addNavListListeners),\n/* harmony export */   \"addPageBtnListeners\": () => (/* binding */ addPageBtnListeners),\n/* harmony export */   \"addTasksListListener\": () => (/* binding */ addTasksListListener),\n/* harmony export */   \"addThemeToggListener\": () => (/* binding */ addThemeToggListener),\n/* harmony export */   \"docListener\": () => (/* binding */ docListener)\n/* harmony export */ });\n// This module contains functions that add (or remove) listeners to key page elements\n\nconst addMenuToggListener = (evnt, fn) => {\n  const menuToggle = document.querySelector('.menu-icon');\n\n  menuToggle.addEventListener(evnt, fn);\n}\n\nconst addThemeToggListener = (evnt, fn) => {\n  const themeToggle = document.querySelector('.theme-icon');\n\n  themeToggle.addEventListener(evnt, fn);\n}\n\nconst addNavListListeners = (evnt, fn) => {\n  // In lieu of adding listener to list items, add to lists\n  // May be more efficient?\n  let navLists = document.querySelectorAll('nav ul');\n\n  navLists.forEach((list) => {\n    list.addEventListener(evnt, fn);\n  });\n}\n\nconst addTasksListListener = (evnt, fn) => {\nconst tasksList = document.querySelector('#tasks-list');\n\n  if (tasksList) {\n    tasksList.addEventListener(evnt, fn);\n  }\n}\n\nconst addPageBtnListeners = (evnt, fn) => {\n  const formBtns = document.querySelectorAll('button');\n\n  formBtns.forEach(btn => {\n    btn.addEventListener(evnt, fn);\n  });\n}\n\nconst docListener = (action, evnt, fn) => {\n  action === 'add' \n    ? document.body.addEventListener(evnt, fn) \n    : document.body.removeEventListener(evnt, fn);\n}\n\n\n\n\n\n//# sourceURL=webpack://todo-list/./src/modules/listener-fns.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./src/index.js");
/******/ 	
/******/ })()
;